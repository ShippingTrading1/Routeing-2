google.maps.__gjsload__('poly', function(_) {
    var vQ = function(a, b) {
        return b ? _.Ds(b, a.map.get("projection")) : null
    }
      , wQ = function(a, b) {
        return b ? _.wm(b, a.map.get("projection"), !1) : null
    }
      , xQ = function(a) {
        for (a = a.toString(16); a.length < 2; )
            a = "0" + a;
        return a
    }
      , N0a = function(a) {
        const b = a.length;
        !b || a[0] == a[b - 2] && a[1] == a[b - 1] || (a.push(a[0]),
        a.push(a[1]))
    }
      , O0a = function(a, b) {
        for (let d = 0, e = a.length; d < e; d += 2) {
            var c = new _.sk(a[d],a[d + 1],!0);
            c = _.Ds(c, b);
            a[d] = c.Eg;
            a[d + 1] = c.Fg
        }
    }
      , yQ = function(a, b, c) {
        const d = a.path;
        a = a.Um;
        const e = []
          , f = a ? [] : null
          , g = d[0] == d[d.length - 2] && d[1] == d[d.length - 1];
        for (let h = 0, k = d.length - 2; h < k; h += 2) {
            const m = d[h]
              , p = d[h + 1]
              , t = d[h + 2]
              , u = d[h + 3];
            let w, y;
            a && (w = a[h / 2],
            y = a[h / 2 + 1]);
            let z, B;
            switch (b) {
            case 0:
                z = m >= c;
                B = t >= c;
                break;
            case 1:
                z = m <= c;
                B = t <= c;
                break;
            case 2:
                z = p >= c;
                B = u >= c;
                break;
            case 3:
                z = p <= c,
                B = u <= c
            }
            !h && z && (e.push(m, p),
            a && f.push(w));
            if (z != B) {
                let D;
                switch (b) {
                case 0:
                case 1:
                    D = (c - m) / (t - m);
                    e.push(c, p + D * (u - p));
                    break;
                case 2:
                case 3:
                    D = (c - p) / (u - p),
                    e.push(m + D * (t - m), c)
                }
                a && f.push(w + D * (y - w))
            }
            B && (e.push(t, u),
            a && f.push(y))
        }
        g && e.length && (e[0] != e[e.length - 2] || e[1] != e[e.length - 1]) && (e.push(e[0], e[1]),
        a && f.push(a[a.length - 1]));
        return {
            path: e,
            Um: f
        }
    }
      , P0a = function(a, b) {
        a = yQ(a, 0, b.minX);
        a = yQ(a, 1, b.maxX);
        a = yQ(a, 2, b.minY);
        return yQ(a, 3, b.maxY)
    }
      , Q0a = function(a, b, c) {
        let d = 0;
        for (let e = 0, f = c.length; e < f; ++e)
            d += _.lJa(a, b, c[e]);
        return !!(d & 1)
    }
      , R0a = function(a, b, c, d) {
        let e = null
          , f = c * c;
        for (let w = 0, y = d.length; w < y; ++w) {
            a: {
                let z, B;
                var g = void 0;
                var h = a;
                var k = b
                  , m = c
                  , p = d[w];
                const D = p.length;
                if (!D || m <= 0) {
                    h = null;
                    break a
                }
                let G = 0
                  , I = m * m * 1.01;
                const U = [0, 0];
                let W = p[G++] - h
                  , sa = p[G++] - k
                  , C = (W < -m ? 1 : 0) | (W > m ? 2 : 0) | (sa < -m ? 4 : 0) | (sa > m ? 8 : 0);
                var t = W * W + sa * sa;
                !C && t <= I && (I = t,
                U[0] = W,
                U[1] = sa);
                for (; G < D; ) {
                    B = W;
                    z = sa;
                    g = C;
                    W = p[G++] - h;
                    sa = p[G++] - k;
                    C = (W < -m ? 1 : 0) | (W > m ? 2 : 0) | (sa < -m ? 4 : 0) | (sa > m ? 8 : 0);
                    if (g & C)
                        continue;
                    t = W * W + sa * sa;
                    !C && t <= I && (I = t,
                    U[0] = W,
                    U[1] = sa);
                    g = W - B;
                    const ya = sa - z;
                    var u = g * g + ya * ya;
                    if (u < 1E-12)
                        continue;
                    const Ca = W * g + sa * ya;
                    Ca < 0 || Ca > u || (t -= Ca * Ca / u,
                    t <= I && (I = t,
                    u = 1 - Ca / u,
                    U[0] = B + g * u,
                    U[1] = z + ya * u))
                }
                U[0] += h;
                U[1] += k;
                U[2] = I;
                h = I <= m * m ? U : null
            }
            h && h[2] <= f && (f = h[2],
            e = h)
        }
        return e
    }
      , S0a = function(a) {
        const b = new _.TKa(["mousemove", "mouseup", "mousewheel"]);
        _.fE(b, ["panes", "pixelBounds"], a);
        return b
    }
      , zQ = function(a) {
        const b = S0a(a);
        _.Gk(b, "mousemove", _.Bk);
        _.Gk(b, "mouseup", _.Bk);
        _.Gk(b, "mousewheel", (...c) => {
            const d = a.get("mouseEventTarget");
            d && _.Sk(d, "mousewheel", ...c)
        }
        );
        return b
    }
      , U0a = function(a) {
        var b = ["px", "%"];
        if (!a || !_.Fj(b))
            return null;
        if (a == "0")
            return {
                value: 0,
                unit: b[0]
            };
        for (let c = 0, d = b.length; c < d; ++c) {
            const e = b[c]
              , f = (T0a[e] = T0a[e] || new RegExp("^(\\d+(?:\\.\\d+)?)" + e + "$")).exec(a);
            if (f)
                return {
                    value: parseFloat(f[1]),
                    unit: e
                }
        }
        return null
    }
      , V0a = function(a, b, c) {
        const d = _.wm(new _.Im(c.x,c.y), a);
        a = _.wm(new _.Im(c.x + b,c.y + b), a);
        return Math.min(Math.abs(d.lat() - a.lat()), Math.abs(d.lng() - a.lng()))
    }
      , AQ = function(a, b) {
        return a.x * b.x + a.y * b.y + a.z * b.z
    }
      , BQ = function(a, b, c) {
        c.x = a.y * b.z - a.z * b.y;
        c.y = a.z * b.x - a.x * b.z;
        c.z = a.x * b.y - a.y * b.x
    }
      , CQ = function(a, b) {
        const c = _.jj(a[0]);
        a = _.jj(a[1]);
        const d = Math.cos(c);
        b.x = Math.cos(a) * d;
        b.y = Math.sin(a) * d;
        b.z = Math.sin(c)
    }
      , DQ = function(a, b) {
        const c = Math.atan2(a.y, a.x);
        b[0] = _.kj(Math.atan2(a.z, Math.sqrt(a.x * a.x + a.y * a.y)));
        b[1] = _.kj(c)
    }
      , X0a = function(a, b, c) {
        c.x = a.x + b.x;
        c.y = a.y + b.y;
        c.z = a.z + b.z;
        W0a(c)
    }
      , W0a = function(a) {
        const b = Math.sqrt(AQ(a, a));
        b < 1E-12 || (a.x /= b,
        a.y /= b,
        a.z /= b)
    }
      , Y0a = function(a, b) {
        for (; b < a.Eg.length; ++b)
            a.Eg[b].index = b
    }
      , EQ = function(a, b, c, d) {
        const e = b.index
          , f = b.to.get("position");
        b = (b = b.to.get("latLngPosition")) && a.map ? _.Ds(b, a.map.get("projection")) : null;
        _.Sk(a, c, e, f, b, d)
    }
      , Z0a = function(a, b, c) {
        if ((b = b.to.Og) && a.map) {
            a = a.map.__gm.get("projectionController");
            const d = a.fromLatLngToDivPixel(c);
            b = b(d);
            if (b = a.fromDivPixelToLatLng(b))
                return b
        }
        return c
    }
      , $0a = function(a, b) {
        if (b && a.ep) {
            if (a.constraint === 2)
                return {
                    clientX: a.ep.clientX,
                    clientY: b.clientY
                };
            if (a.constraint === 1)
                return {
                    clientX: b.clientX,
                    clientY: a.ep.clientY
                }
        }
        return b
    }
      , FQ = function(a) {
        const b = a.Eg
          , c = a.get("center");
        var d = a.get("radius");
        if (c && _.Lj(d)) {
            a.Hg = !0;
            var e = a.get("planetRadius")
              , f = _.kj(d / e);
            var g = _.jj(c.lat());
            if (e = d / e) {
                d = Math.cos(e);
                e = Math.sin(e);
                var h = Math.sin(g);
                g = Math.atan2(Math.sin(Math.acos((1 - d) / e * Math.tan(g))) * e * Math.cos(g), d - h * h)
            } else
                g = 0;
            g = _.kj(g);
            b.setAt(0, c);
            d = c.lat() + f;
            d < 90 ? b.setAt(1, new _.sk(d,c.lng())) : b.setAt(1, null);
            f = c.lat() - f;
            f > -90 ? b.setAt(2, new _.sk(f,c.lng())) : b.setAt(2, null);
            g <= 180 ? (f = c.lng() + g,
            g = c.lng() - g,
            b.setAt(3, new _.sk(c.lat(),f)),
            b.setAt(4, new _.sk(c.lat(),g))) : (b.setAt(3, null),
            b.setAt(4, null));
            a.Hg = !1;
            a.Fg || _.Sk(a, "toolbar", {
                show: !1
            })
        } else
            b.clear()
    }
      , a1a = function(a) {
        const b = a.Ig;
        b && (b.unbindAll(),
        b.release(),
        _.Lk(b),
        a.Ig = null)
    }
      , d1a = function(a) {
        var b = a.get("panes");
        if (!b)
            return null;
        b = new GQ(a.Eg,b1a,c1a,!1,b.overlayMouseTarget,a.Jg,a.get("map"),a.ah);
        b.bindTo("projection", a);
        b.bindTo("zoom", a);
        b.bindTo("projectionCenterQ", a);
        b.bindTo("panningEnabled", a);
        b.bindTo("mapPixelBounds", a);
        b.bindTo("color", a);
        b.bindTo("zIndex", a);
        b.bindTo("offset", a);
        const c = a.Wu;
        c.bindTo("freeVertexPosition", b);
        let d = null
          , e = null;
        _.Gk(b, "dragstart", f => {
            d = a.get("center");
            e = a.get("radius");
            c.set("freeVertexIsCenter", f === 0);
            c.set("map", a.get("map"))
        }
        );
        _.Gk(b, "dragend", (f, g, h) => {
            c.set("map", null);
            _.Sk(a, "toolbar", {
                show: !0,
                qw: h,
                action() {
                    a.set("center", d);
                    a.set("radius", e)
                }
            })
        }
        );
        _.Rk(b, "dragstart", a);
        _.Rk(b, "dragend", a);
        _.Rk(b, "panbynow", a);
        return b
    }
      , e1a = function(a, b, c) {
        return c && b || a
    }
      , HQ = function(a) {
        let b;
        if (a.Fg) {
            const c = _.RJ(a.get("color"));
            c && (c.red = Math.floor((c.red + 255) / 2),
            c.green = Math.floor((c.green + 255) / 2),
            c.blue = Math.floor((c.blue + 255) / 2),
            b = ["#", xQ(c.red), xQ(c.green), xQ(c.blue)].join(""))
        }
        a.Ng.setFillColor(a.Eg, b || "white")
    }
      , h1a = function(a, b, c, d) {
        function e() {
            a.get("editable") ? f1a(a, b, c, d) : (g1a(a),
            _.Sk(a, "toolbar", {
                show: !1
            }))
        }
        a.editable_changed = e;
        e()
    }
      , f1a = function(a, b, c, d) {
        if (!a.Zy) {
            var e = new _.hL(a,!0);
            a.Vq = e;
            var f = new i1a;
            f.bindTo("strokeColor", e);
            f.bindTo("strokeOpacity", e, "ghostStrokeOpacity");
            f.bindTo("strokeWeight", e);
            f.bindTo("center", a);
            f.bindTo("radius", a);
            f.bindTo("planetRadius", c);
            f.bindTo("zIndex", a);
            a.Wu = f;
            var g = b.__gm;
            a.Aj = zQ(g);
            var h = _.SJ(g, a)
              , k = _.Xs() ? 9 : 0
              , m = new IQ;
            d = new j1a(f,function(p, t, u) {
                return new JQ(p,a.Aj,k,t,h,m,u)
            }
            ,d);
            d.set("map", b);
            d.bindTo("center", a);
            d.bindTo("radius", a);
            d.bindTo("planetRadius", c);
            d.bindTo("panes", g);
            d.bindTo("projection", b);
            d.bindTo("zoom", g);
            d.bindTo("projectionCenterQ", g);
            d.bindTo("panningEnabled", b, "draggable");
            d.bindTo("mapPixelBounds", g, "pixelBounds");
            d.bindTo("offset", g);
            d.bindTo("color", e, "strokeColor");
            d.bindTo("zIndex", a);
            a.Zy = d;
            _.Rk(d, "panbynow", g);
            _.Rk(d, "toolbar", a)
        }
    }
      , g1a = function(a) {
        const b = a.Zy;
        b && (b.unbindAll(),
        b.set("map", null),
        _.Lk(b),
        delete a.Zy,
        a.Aj?.unbindAll(),
        a.Aj?.release(),
        delete a.Aj,
        a.Wu?.unbindAll(),
        delete a.Wu,
        a.Vq?.release(),
        delete a.Vq)
    }
      , k1a = function(a, b, c) {
        const d = Array(250);
        var e = _.jj(a.lat())
          , f = _.jj(a.lng())
          , g = Math.cos(b);
        const h = Math.sin(b)
          , k = Math.cos(e);
        e = Math.sin(e);
        if (k > 1E-6)
            for (a = 0; a < 250; ++a) {
                b = a / 250 * Math.PI * 4;
                b += Math.sin(b + Math.PI);
                var m = b / 2
                  , p = e * g + k * h * Math.cos(m);
                b = Math.asin(p);
                let t = f + Math.atan2(Math.sin(m) * h * k, g - e * p);
                m = -Math.PI;
                p = Math.PI - m;
                t = ((t - m) % p + p) % p + m;
                d[a] = c(_.kj(b), _.kj(t))
            }
        else
            for (f = _.kj(b),
            f = a.lat() > 0 ? a.lat() - f : a.lat() + f,
            g = 0; g < 250; ++g)
                d[g] = c(f, 360 * g / 250);
        return d
    }
      , LQ = function(a) {
        const b = this
          , c = new _.$n;
        this.Fg = c;
        c.ou = a;
        c.eD = !0;
        c.bindTo("capturing", b);
        c.bindTo("cursor", b);
        c.bindTo("map", b);
        c.bindTo("strokeColor", b);
        c.bindTo("strokeOpacity", b);
        c.bindTo("strokeWeight", b);
        c.bindTo("strokePosition", b);
        c.bindTo("fillColor", b);
        c.bindTo("fillOpacity", b);
        c.bindTo("clickable", b);
        c.bindTo("zIndex", b);
        c.bindTo("suppressUndo", b);
        c.Uw = !0;
        const d = this.Eg = [];
        _.gc(KQ, function(e) {
            d.push(_.Rk(c, e, b))
        });
        d.push(_.Rk(b, "toolbar", c));
        this.Hg = new _.Zm( () => {
            const e = this.Fg;
            if (e) {
                var f = this.get("radius")
                  , g = this.get("center");
                _.Lj(f) && g ? (f /= this.get("planetRadius"),
                e.setPaths(l1a(g, f))) : e.setPaths([])
            }
        }
        ,0)
    }
      , l1a = function(a, b) {
        const c = [k1a(a, b, function(d, e) {
            return new _.sk(d,e)
        })];
        _.jj(a.lat()) - b < -Math.PI / 2 && (a = [new _.sk(-90,-200,!0), new _.sk(90,-200,!0), new _.sk(90,-100,!0), new _.sk(90,0,!0), new _.sk(90,100,!0), new _.sk(90,200,!0), new _.sk(-90,200,!0), new _.sk(-90,100,!0), new _.sk(-90,0,!0), new _.sk(-90,-100,!0), new _.sk(-90,-200,!0)],
        c.push(a));
        return c
    }
      , MQ = function(a, b) {
        const c = a.__gm
          , d = () => {
            const e = a.get("gestureHandling");
            e != null ? b.set("panningEnabled", e !== "none") : b.set("panningEnabled", a.get("draggable"))
        }
        ;
        _.Gk(a, "gesturehandling_changed", d);
        _.Gk(a, "draggable_changed", d);
        b.bindTo("panes", c);
        b.bindTo("projectionController", c);
        b.bindTo("containerPixelBounds", c, "pixelBounds");
        c.zh = _.Rk(b, "panbynow", c)
    }
      , NQ = function(a, b) {
        const c = () => {
            const d = a.getMap();
            a.getDraggable() && (_.Cl(d, "Od"),
            _.M(d, 147751))
        }
        ;
        a.draggable_changed = c;
        c();
        a.fD = [_.Gk(a, "mouseover", d => {
            d.vertex == null && d.edge == null && b.set("poly", a)
        }
        ), _.Gk(a, "mouseout", d => {
            d.vertex != null || d.edge != null || d.domEvent && _.Yq(d.domEvent) || b.set("poly", null)
        }
        )]
    }
      , OQ = function(a) {
        (a.fD || []).forEach(_.Ik);
        delete a.draggable_changed;
        delete a.fD
    }
      , PQ = function(a) {
        if (!a.get("active")) {
            var b = a.get("panes")
              , c = a.get("projectionController")
              , d = a.get("poly");
            if (b !== a.Mg || c !== a.Ig || d !== a.Eg)
                a.Mg = b,
                a.Ig = c,
                a.Eg = d,
                a.Fg && a.Fg.forEach(_.Ik),
                a.Fg = null,
                a.Mg && a.Ig && a.Eg ? (a.Fg = [_.Ok(a.Eg, "mousedown", a, a.Tg), _.Ok(a.Eg, "mouseup", a, a.Ug), _.Ok(a.Eg, "movestart", a, a.Qg), _.Ok(a.Eg, "move", a, a.Rg), _.Ok(a.Eg, "moveend", a, a.Pg)],
                a.Fg.push(_.Gk(a.Eg, "editable_changed", () => {
                    a.get("storeEditable") && (a.Ng = a.Eg.get("editable"),
                    a.set("storeEditable", !1),
                    a.Eg.set("editable", !1),
                    a.set("storeEditable", !0))
                }
                )),
                a.bindTo("draggable", a.Eg)) : (a.unbind("draggable"),
                a.set("draggable", !1))
        }
    }
      , QQ = function(a, b, c) {
        var d = a.get("position");
        d = a.Ig.fromDivPixelToLatLng(d);
        c = new _.uy(d,c.domEvent);
        a.Eg && _.Sk(a.Eg, b, c)
    }
      , m1a = function(a) {
        _.tJ(a.Jg, a.get("panningEnabled") !== !1 && a.get("dragging"))
    }
      , o1a = async function(a, b) {
        const c = await _.wj("geometry");
        a.Eg = new RQ( (d, e, f) => new n1a(d,e,f,c.spherical.computeHeading,c.spherical.computeOffsetOrigin),a.map,b);
        MQ(a.map, a.Eg);
        a.Nh.Ng.forEach(d => {
            a.nj(d)
        }
        )
    }
      , q1a = function(a) {
        const b = a.getVisible() != 0 ? a.getMap() : null;
        a.Ol !== b && (a.Ol && a.Ol.__gm.Ng.remove(a),
        b && (b.__gm.Ng.nj || new p1a(b),
        _.dn(b.__gm.Ng, a)),
        a.Ol = b)
    }
      , r1a = function(a) {
        a = a.poly.get("latLngs");
        const b = new SQ(0)
          , c = new SQ(0);
        a.forEach(d => {
            d.forEach(e => {
                CQ([e.lat(), e.lng()], c);
                b.x += c.x;
                b.y += c.y;
                b.z += c.z
            }
            )
        }
        );
        W0a(b);
        a = [0, 0];
        DQ(b, a);
        a[0] = _.Ij(a[0], -89, 89);
        return new _.sk(a[0],a[1])
    }
      , t1a = function(a, b, c, d) {
        a.capturing_changed = function() {
            if (a.get("capturing"))
                if (a.get("clickable") == 0) {
                    const e = a.Jw = new s1a;
                    e.bindTo("draggableCursor", a, "cursor");
                    e.set("active", !0);
                    b.bindTo("cursor", e);
                    d.register(e)
                } else
                    d.setCapture(c, a);
            else
                a.Jw ? (d.unregister(a.Jw),
                a.Jw.unbindAll(),
                b.unbind("cursor"),
                b.set("cursor", ""),
                delete a.Jw) : d.releaseCapture(c, a)
        }
    }
      , u1a = function(a) {
        a.Fg || (a.Fg = b => {
            _.Gj(a.Fg.Rj, (c, d) => {
                d(b)
            }
            )
        }
        ,
        a.Fg.Rj = {});
        a.Ig || (a.Ig = (b, c) => {
            _.Gj(a.Ig.Rj, (d, e) => {
                e(b, c)
            }
            )
        }
        ,
        a.Ig.Rj = {});
        a.Hg || (a.Hg = (b, c) => {
            _.Gj(a.Hg.Rj, (d, e) => {
                e(b, c)
            }
            )
        }
        ,
        a.Hg.Rj = {})
    }
      , TQ = function(a, b) {
        a.Fg && delete a.Fg.Rj[b];
        a.Ig && delete a.Ig.Rj[b];
        a.Hg && delete a.Hg.Rj[b]
    }
      , y1a = function(a, b, c) {
        const d = _.Uk(b);
        c in v1a && (a.Eg[d] = b,
        UQ(b));
        c in w1a && (a.Fg[d] = b);
        x1a(a)
    }
      , UQ = function(a) {
        var b = a.get("latLngs");
        if (b) {
            a = _.Uk(a);
            TQ(b, a);
            b = b.getArray();
            for (let c = 0, d = b.length; c < d; ++c)
                TQ(b[c], a)
        }
    }
      , x1a = function(a) {
        a.timeout || (a.timeout = _.cE( () => {
            a.timeout = 0;
            var b = a.Fg;
            a.Fg = {};
            const c = a.Eg;
            a.Eg = {};
            for (var d of Object.keys(b)) {
                var e = b[d]
                  , f = e.Qx;
                f.style = z1a(a.Ig, e);
                f.FA && !c[d] && f.FA()
            }
            b = a.Hg;
            d = a.get("projection");
            for (const g of Object.keys(c))
                e = c[g],
                f = e.Qx,
                b.remove(f),
                f.geometry = A1a(e, d),
                _.dn(b, f),
                B1a(a, e)
        }
        ))
    }
      , B1a = function(a, b) {
        function c() {
            y1a(e, b, "latLngs")
        }
        const d = b.get("latLngs");
        if (d) {
            var e = a
              , f = _.Uk(b);
            a = d.getArray();
            for (let g = 0, h = a.length; g < h; ++g) {
                const k = a[g];
                u1a(k);
                k.Fg.Rj[f] = k.Ig.Rj[f] = k.Hg.Rj[f] = c
            }
            u1a(d);
            d.Ig.Rj[f] = d.Hg.Rj[f] = (g, h) => {
                TQ(h, f);
                c()
            }
            ;
            d.Fg.Rj[f] = c
        }
    }
      , C1a = function(a) {
        const b = a.get("projection")
          , c = a.Fg;
        if (b) {
            var d = a.Eg
              , e = d.getLength()
              , f = a.get("geodesic");
            for (let g = 0; g < e - 1; ++g)
                c.setAt(g, VQ(d.getAt(g), d.getAt(g + 1), f, b, a.interpolate))
        } else
            c.clear()
    }
      , D1a = function(a, b, c) {
        const d = a.get("projection");
        if (d) {
            var e = a.Eg
              , f = e.getAt(c)
              , g = a.Fg
              , h = a.get("geodesic");
            c > 0 && g.setAt(c - 1, VQ(e.getAt(c - 1), f, h, d, a.interpolate));
            c < e.getLength() - 1 && (a = VQ(f, e.getAt(c + 1), h, d, a.interpolate),
            b ? g.insertAt(c, a) : g.setAt(c, a))
        }
    }
      , VQ = function(a, b, c, d, e) {
        c ? d = e(a, b, .5) : (Math.abs(a.lng() - b.lng()) > 180 && (a = new _.sk(a.lat(),_.Jj(a.lng(), b.lng() - 180, b.lng() + 180),!0)),
        a = d.fromLatLngToPoint(a),
        b = d.fromLatLngToPoint(b),
        d = d.fromPointToLatLng(new _.Il((a.x + b.x) / 2,(a.y + b.y) / 2)));
        return d
    }
      , E1a = function(a) {
        const b = c => WQ(c);
        _.gc(a.Fg, b);
        _.gc(a.Eg, b);
        a.Fg.length = 0;
        a.Eg.length = 0;
        _.gc(a.Jg, _.Ik);
        a.Jg.length = 0
    }
      , G1a = function(a, b, c, d) {
        const e = new GQ(b,["pointer"],[0],d,c,a.Kg,a.get("map"),a.Lg);
        e.bindTo("projection", a);
        e.bindTo("zoom", a);
        e.bindTo("projectionCenterQ", a);
        e.bindTo("panningEnabled", a);
        e.bindTo("mapPixelBounds", a);
        e.bindTo("color", a);
        e.bindTo("zIndex", a);
        e.bindTo("offset", a);
        _.Rk(e, "dragstart", a);
        _.Rk(e, "dragend", a);
        _.Rk(e, "panbynow", a);
        _.Rk(e, "toolbar", a);
        _.gc(KQ, function(f) {
            _.Gk(e, f, (g, h, k, m) => {
                h = b.getAt(g);
                let p;
                if (a.Hg) {
                    k = d ? a.Eg : a.Fg;
                    for (let t = 0; t < k.length; ++t)
                        if (k[t] == e) {
                            p = t;
                            break
                        }
                }
                _.Sk(a, f, new F1a(h,m,p,d ? void 0 : g,d ? g : void 0))
            }
            )
        });
        return e
    }
      , XQ = function(a, b, c) {
        const d = G1a(a, b, c, !1)
          , e = a.Ig;
        let f;
        _.Gk(d, "dragstart", function(g) {
            f = b.getAt(g);
            var h = b.getArray()
              , k = a.Hg;
            const m = h.length;
            if (m < 2)
                e.set("anchors", []);
            else {
                var p = h[k && g === 0 ? m - 1 : g - 1];
                g = h[k && g === m - 1 ? 0 : g + 1];
                h = [];
                p && h.push(p);
                g && h.push(g);
                e.set("anchors", h)
            }
            e.bindTo("freeVertexPosition", d);
            e.set("map", a.get("map"))
        });
        _.Gk(d, "dragend", function(g, h, k) {
            e.set("map", null);
            _.Sk(a, "toolbar", {
                show: !0,
                qw: k,
                action: function() {
                    b.setAt(g, f)
                }
            })
        });
        return d
    }
      , YQ = function(a, b, c) {
        const d = new _.ym
          , e = a.Hg ? new H1a(b) : b
          , f = new I1a(e,d,a.Mg);
        f.bindTo("geodesic", a);
        f.bindTo("projection", a);
        const g = G1a(a, d, c, !0);
        g.Fg = f;
        const h = a.Ig;
        _.Gk(g, "dragstart", function(k) {
            k = [e.getAt(k), e.getAt(k + 1)];
            h.set("anchors", k);
            h.bindTo("freeVertexPosition", g);
            h.set("map", a.get("map"))
        });
        _.Gk(g, "dragend", function(k, m, p) {
            b.insertAt(k + 1, d.getAt(k));
            h.set("map", null);
            _.Sk(a, "toolbar", {
                show: !0,
                qw: p,
                action: function() {
                    b.removeAt(k + 1)
                }
            })
        });
        return g
    }
      , WQ = function(a) {
        a.unbindAll();
        a.release();
        _.Lk(a);
        a.Fg && (a.Fg.release(),
        a.Fg.unbindAll())
    }
      , L1a = function(a, b, c, d, e) {
        function f() {
            a.get("editable") ? (J1a(a, b, d, e),
            _.Cl(b, "Oe"),
            _.M(b, 147756)) : (_.Sk(c, "toolbar", {
                show: !1,
                poly: a
            }),
            K1a(a))
        }
        a.editable_changed = f;
        f();
        a.OB = _.Gk(a, "toolbar", g => {
            g.poly = a;
            _.Sk(c, "toolbar", g)
        }
        )
    }
      , J1a = function(a, b, c, d) {
        if (!a.NA) {
            var e = new _.hL(a,a.tp);
            a.Vq = e;
            var f = new _.UKa;
            f.bindTo("strokeColor", e);
            f.bindTo("strokeOpacity", e, "ghostStrokeOpacity");
            f.bindTo("strokeWeight", e);
            f.bindTo("geodesic", a);
            f.bindTo("zIndex", a);
            a.In = f;
            var g = b.__gm;
            a.Aj = zQ(g);
            var h = _.SJ(g, a)
              , k = _.Xs() ? 9 : 0
              , m = new IQ
              , p = new ZQ(f,a.tp,function(t, u, w) {
                return new JQ(t,a.Aj,k,u,h,m,w)
            }
            ,c,d);
            p.set("map", b);
            p.bindTo("paths", a, "latLngs");
            p.bindTo("panes", g);
            p.bindTo("projection", b);
            p.bindTo("zoom", g);
            p.bindTo("projectionCenterQ", g);
            p.bindTo("panningEnabled", b, "draggable");
            p.bindTo("mapPixelBounds", g, "pixelBounds");
            p.bindTo("offset", g);
            p.bindTo("color", e, "strokeColor");
            p.bindTo("zIndex", a);
            p.bindTo("geodesic", a);
            p.bindTo("suppressGhostControlPoints", a);
            a.NA = p;
            _.Rk(p, "panbynow", g);
            _.Rk(p, "toolbar", a);
            KQ.forEach(t => {
                _.Rk(p, t, a)
            }
            )
        }
    }
      , K1a = function(a) {
        const b = a.NA;
        b && (b.unbindAll(),
        b.set("map", null),
        _.Lk(b),
        delete a.NA,
        a.Aj.unbindAll(),
        a.Aj.release(),
        delete a.Aj,
        a.In.unbindAll(),
        delete a.In,
        a.Vq.release(),
        delete a.Vq)
    }
      , M1a = function(a) {
        a.Fg && _.Kk(a.Fg, "suppressundo_changed")
    }
      , N1a = function(a, b, c) {
        a.Hg(_.Wl);
        a.Ig = b;
        M1a(a);
        a.Fg = c;
        _.jE(a.Eg);
        _.Gk(c, "suppressundo_changed", () => {
            c.get("suppressUndo") && a.Kj()
        }
        )
    }
      , O1a = function(a) {
        return (a || []).map(b => (b || []).map(c => Math.round(c)))
    }
      , R1a = function(a, b, c) {
        function d() {
            g[w++] = k.latLng[0];
            g[w++] = k.latLng[1];
            f && (h[t++] = k.distance);
            m = k
        }
        const e = a.path
          , f = a.Um;
        if (!e.length)
            return a;
        const g = Array(e.length)
          , h = f ? Array(f.length) : null;
        a = [];
        let k, m = $Q();
        g[0] = m.latLng[0] = e[0];
        g[1] = m.latLng[1] = e[1];
        f && (h[0] = m.distance = f[0]);
        m.depth = 0;
        CQ(m.latLng, m.At);
        let p = 1
          , t = 1;
        const u = [];
        let w = 2;
        for (let z = 2; z < e.length || u.length; ) {
            u.length ? k = u.pop() : (k = $Q(),
            k.depth = 0,
            k.latLng[0] = e[z++],
            k.latLng[1] = e[z++],
            f && (k.distance = f[p++]),
            CQ(k.latLng, k.At));
            if (Math.max(m.depth, k.depth) >= 12) {
                d();
                continue
            }
            var y = new _.zm;
            y.minX = Math.min(m.latLng[0], k.latLng[0]);
            y.maxX = Math.max(m.latLng[0], k.latLng[0]);
            y.minY = Math.min(m.latLng[1], k.latLng[1]);
            y.maxY = Math.max(m.latLng[1], k.latLng[1]);
            if (!_.Bm(b, y)) {
                d();
                continue
            }
            const B = $Q();
            X0a(m.At, k.At, B.At);
            DQ(B.At, B.latLng);
            B.depth = Math.max(m.depth, k.depth) + 1;
            f && (B.distance = (m.distance + k.distance) / 2);
            const D = y.minY - 1E-6
              , G = y.maxY + 1E-6;
            y = B.latLng;
            y[1] = P1a(D, G, y[1]);
            Q1a(m.latLng, k.latLng, a);
            Math.max(Math.abs(B.latLng[0] - a[0]), Math.abs(B.latLng[1] - a[1])) <= c ? d() : (u.push(k),
            u.push(B))
        }
        return {
            path: g,
            Um: h
        }
    }
      , Q1a = function(a, b, c) {
        c[0] = (a[0] + b[0]) / 2;
        c[1] = (a[1] + b[1]) / 2
    }
      , P1a = function(a, b, c) {
        for (; c < a; )
            c += 360;
        for (; c > b; )
            c -= 360;
        return c
    }
      , $Q = function() {
        return {
            latLng: [0, 0],
            At: new SQ(0)
        }
    }
      , S1a = function(a) {
        return function(b, c) {
            if (b.unit === "px")
                b = b.value / a;
            else {
                const d = _.Fj(c);
                b = d ? b.value / 100 * c[d - 1] : 0
            }
            return b
        }
    }
      , T1a = function(a, b) {
        return function(c, d) {
            if (c === 0)
                return !0;
            c = a[c];
            d = a[d];
            for (let e = 0, f; f = b[e]; ++e) {
                const g = f.offset
                  , h = f.repeat;
                if (h) {
                    if (Math.floor((c - g) / h) !== Math.floor((d - g) / h))
                        return !0
                } else if (c < g && g <= d)
                    return !0
            }
            return !1
        }
    }
      , U1a = function(a, b, c, d) {
        const e = a.minX
          , f = a.minY
          , g = a.maxX
          , h = a.maxY;
        return function(k, m, p) {
            var t = d[k * 2]
              , u = d[k * 2 + 1];
            k = d[m * 2];
            m = d[m * 2 + 1];
            var w = Math.min(u, m) - p
              , y = Math.max(t, k) + p;
            const z = Math.max(u, m) + p;
            Math.min(t, k) - p <= g && e <= y && w <= h && f <= z ? p > b ? p = !0 : (w = c.fromLatLngToPoint(new _.sk(t,u,!0)),
            y = c.fromLatLngToPoint(new _.sk(k,m,!0)),
            w = c.fromPointToLatLng(new _.Il((w.x + y.x) / 2,(w.y + y.y) / 2), !0),
            u = (u + m) / 2,
            t = (t + k) / 2 - w.lat(),
            k = u - w.lng(),
            p = Math.sqrt(t * t + k * k) + p > b) : p = !1;
            return p
        }
    }
      , W1a = function(a, b, c) {
        return function(d, e, f) {
            const g = d.path
              , h = d.Um
              , k = U1a(a, b, c, g);
            d = k;
            if (h) {
                const t = T1a(h, f);
                d = (u, w, y) => k(u, w, y) || t(u, w)
            }
            const m = []
              , p = h ? [] : null;
            V1a(e, g.length / 2, d, function(t) {
                m.push(g[t * 2], g[t * 2 + 1]);
                h && p.push(h[t])
            });
            return {
                path: m,
                Um: p
            }
        }
    }
      , Y1a = function(a, b, c, d) {
        const e = a.Um;
        if (!e)
            return null;
        a = a.path;
        const f = [];
        for (let k = 0, m = a.length - 2; k < m; ) {
            const p = a[k]
              , t = a[k + 1];
            var g = e[k / 2]
              , h = g - b;
            k += 2;
            let u = a[k]
              , w = a[k + 1];
            if (X1a(p, t, d) & X1a(u, w, d))
                continue;
            for (; _.Kj(p, u) && _.Kj(t, w) && k < m; )
                k += 2,
                u = a[k],
                w = a[k + 1];
            const y = e[k / 2] - b
              , z = Math.atan2(u - p, t - w);
            g === 0 && (h -= 1E-9);
            if (c)
                for (g = Math.floor(y / c) * c; g > h; ) {
                    const B = (g - h) / (y - h);
                    f.push(p + (u - p) * B, t + (w - t) * B, z);
                    g -= c
                }
            else
                h < 0 && 0 <= y && (h = (0 - h) / (y - h),
                f.push(p + (u - p) * h, t + (w - t) * h, z))
        }
        return f
    }
      , X1a = function(a, b, c) {
        let d = 0;
        _.Kj(a, -16, .001) && (d |= 1);
        _.Kj(a, c.hh + 16, .001) && (d |= 2);
        _.Kj(b, -16, .001) && (d |= 4);
        _.Kj(b, c.kh + 16, .001) && (d |= 8);
        return d
    }
      , Z1a = function(a, b, c) {
        const d = [];
        if (c)
            for (let e = 0, f; f = b[e]; ++e)
                d.push({
                    offset: a.Fg(f.offset, c),
                    repeat: a.Fg(f.repeat, c)
                });
        return d
    }
      , $1a = function(a, b, c, d) {
        const e = []
          , f = [];
        for (let k = 0, m = d.length; k < m; ++k)
            f.push([]);
        for (let k = 0, m = b.length; k < m; ++k) {
            var g = b[k];
            let p = g.JG;
            const t = Z1a(a, d, p.Um);
            g.bD ? p = a.Jg(p, g.bD, t) : p = {
                path: p.path.slice(0),
                Um: p.Um
            };
            if (p.path.length) {
                c && (p = R1a(p, a.Eg, a.Ig));
                O0a(p.path, a.projection);
                p = P0a(p, a.Hg);
                var h = p.path;
                g = a.Dh.size;
                if (h.length) {
                    e.push(h);
                    for (let u = 0; u < h.length; u += 2) {
                        const w = _.Ow(a.Dh, new _.Im(h[u],h[u + 1]), a.zoom, y => y);
                        h[u] = (w.rh - a.pn.x) * g.hh;
                        h[u + 1] = (w.sh - a.pn.y) * g.kh
                    }
                    for (let u = 0, w; w = t[u]; ++u)
                        (h = Y1a(p, w.offset, w.repeat, g)) && (f[u] = f[u].concat(h))
                }
            }
        }
        return {
            paths: e,
            jy: f
        }
    }
      , c2a = function(a, b, c) {
        const d = a2a(a, b, c);
        a = b2a(d, c);
        return {
            canvas: d,
            context: a,
            gF: a ? new _.IKa(a) : null,
            release: () => {
                d.width = d.height = 0
            }
        }
    }
      , a2a = function(a, b, c) {
        a = a.createElement("canvas");
        a.width = b.hh * c;
        a.height = b.kh * c;
        a.style.width = _.ns(b.hh);
        a.style.height = _.ns(b.kh);
        _.Us(a);
        return a
    }
      , b2a = function(a, b) {
        a = a.getContext("2d");
        if (!a)
            return null;
        a.scale(b, b);
        a.lineCap = a.lineJoin = "round";
        return a
    }
      , d2a = function(a, b, c, d, e) {
        for (let D = 0, G = a.length; D < G; ++D) {
            var f = b[D]
              , g = c
              , h = d
              , k = a[D]
              , m = f.AE
              , p = f.scale
              , t = f.rotation
              , u = f.rK
              , w = f.strokeColor
              , y = f.strokeOpacity / e
              , z = f.strokeWeight
              , B = f.fillColor;
            f = f.fillOpacity / e;
            g.beginPath();
            for (let I = 0, U = k.length; I < U; I += 3)
                h.Wh(m, k[I], k[I + 1], t + (u ? k[I + 2] : 0), p);
            f && (g.fillStyle = B,
            g.globalAlpha = f,
            g.fill());
            z && (g.lineWidth = z,
            g.strokeStyle = w,
            g.globalAlpha = y,
            g.stroke())
        }
    }
      , aR = function(a) {
        a.Hg || (a.Hg = _.cE( () => {
            a.Hg = 0;
            const b = e2a(a);
            if (b.length) {
                a.Eg || (a.Eg = c2a(a.Xs, a.tileSize, a.Ig),
                _.Rs(a.Eg.canvas, _.Wl));
                var c = a.Eg.context;
                a: {
                    for ({Wj: d} of b)
                        if (d && d.ql) {
                            var d = d.ql;
                            break a
                        }
                    d = null
                }
                if (c) {
                    a.Eg.canvas.parentNode || a.Yg.appendChild(a.Eg.canvas);
                    c.clearRect(0, 0, a.tileSize.hh, a.tileSize.kh);
                    for (let e = 0; e < b.length; ++e) {
                        const f = b[e]
                          , g = f.OA
                          , h = g.mL;
                        if (_.Kj(1, h))
                            a.Jg(c, f.paths, g.strokeColor, g.strokeOpacity, g.strokeWeight, g.strokePosition, g.Uw, g.fillColor, g.fillOpacity),
                            d2a(f.jy, g.iF, c, a.Eg.gF, 1);
                        else {
                            a.Fg || (a.Fg = c2a(a.Xs, a.tileSize, a.Ig));
                            const k = a.Fg.context;
                            k && (k.clearRect(0, 0, a.tileSize.hh, a.tileSize.kh),
                            a.Jg(k, f.paths, g.strokeColor, g.strokeOpacity / h, g.strokeWeight, g.strokePosition, g.Uw),
                            d2a(f.jy, g.iF, k, a.Fg.gF, h),
                            c.globalAlpha = h,
                            c.drawImage(a.Fg.canvas, 0, 0, a.tileSize.hh, a.tileSize.kh))
                        }
                    }
                    d && d()
                } else
                    d && d()
            } else
                a.Eg && a.Eg.canvas.parentNode && a.Yg.removeChild(a.Eg.canvas),
                f2a(a)
        }
        ))
    }
      , e2a = function(a) {
        const b = [];
        a = a.Gi;
        for (const c of Object.keys(a))
            b.push(a[c]);
        b.sort( (c, d) => c.zIndex - d.zIndex);
        return b
    }
      , f2a = function(a) {
        a.Eg && (a.Eg.release(),
        a.Eg = null);
        a.Fg && (a.Fg.release(),
        a.Fg = null)
    }
      , g2a = function(a, b, c) {
        function d(k, m, p) {
            p = p ? t => t : Math.round;
            k.beginPath();
            for (let t = 0, u; u = m[t]; ++t)
                if (u.length) {
                    k.moveTo(p(u[0]), p(u[1]));
                    for (let w = 2, y = u.length; w < y; )
                        k.lineTo(p(u[w++]), p(u[w++]))
                }
        }
        const e = c.size
          , f = a.createElement("canvas");
        f.width = b * e.hh;
        f.height = b * e.kh;
        const g = f.getContext("2d");
        g.lineCap = g.lineJoin = "round";
        g.scale(b, b);
        const h = [function(k, m, p, t, u) {
            k.lineWidth = u;
            k.strokeStyle = p;
            k.globalAlpha = t;
            k.stroke()
        }
        , function(k, m, p, t, u) {
            k.lineWidth = u * 2;
            k.strokeStyle = p;
            k.globalAlpha = t;
            k.save();
            k.clip();
            k.stroke();
            k.restore()
        }
        , function(k, m, p, t, u, w) {
            g.lineWidth = u * 2;
            g.strokeStyle = p;
            g.globalCompositeOperation = "source-over";
            g.clearRect(0, 0, e.hh, e.kh);
            d(g, m, w);
            g.stroke();
            g.globalCompositeOperation = "destination-out";
            g.fill();
            k.globalAlpha = t;
            k.drawImage(f, 0, 0, e.hh, e.kh)
        }
        ];
        return function(k, m, p, t, u, w, y, z, B) {
            d(k, m, y);
            z != null && B && (k.fillStyle = z,
            k.globalAlpha = B,
            k.fill());
            if (u)
                h[w](k, m, p, t, u, y)
        }
    }
      , i2a = function(a, b, c) {
        a.Eg = a.Eg || g2a(a.Xs, b, a.Dh);
        return new h2a(a.Xs,c,a.Dh,a.Eg,b)
    }
      , k2a = function(a, b) {
        b.FA = () => {
            Object.values(b.geometry.Gi).forEach(d => {
                d.OA = b.style;
                d.zIndex = b.style.zIndex;
                aR(d.Wj.PA)
            }
            )
        }
        ;
        const c = b.geometry.bounds;
        c.poly = b;
        b.bounds = c;
        _.TJ(a.Eg, c);
        a = a.Fg.search(c);
        for (let d = 0, e = a.length; d < e; ++d)
            j2a(b, a[d].yi)
    }
      , l2a = function(a, b) {
        delete b.FA;
        a.Eg.remove(b.bounds);
        a = b.geometry;
        Object.values(a.Gi).forEach(c => {
            const d = c.Wj;
            var e = d.PA;
            delete e.Gi[_.Uk(c)];
            aR(e);
            delete d.Gi[_.Uk(c)]
        }
        );
        a.Gi = {}
    }
      , m2a = function(a, b) {
        const c = b.bounds;
        c.yi = b;
        _.TJ(a.Fg, c);
        a = a.Eg.search(b.bounds);
        if (a.length === 0)
            b.ql && _.Xm(b.ql.bind(b));
        else
            for (let d = 0, e = a.length; d < e; ++d)
                j2a(a[d].poly, b)
    }
      , n2a = function(a, b) {
        a.Fg.remove(b.bounds);
        Object.values(b.Gi).forEach(c => {
            delete c.DE.Gi[_.Uk(c)]
        }
        );
        b.Gi = {}
    }
      , j2a = function(a, b) {
        const c = a.geometry;
        var d = $1a(b.sL, c.lJ, c.geodesic, c.nL);
        d.paths.length ? (a = {
            paths: d.paths,
            jy: d.jy,
            OA: a.style,
            zIndex: a.style.zIndex,
            Wj: b,
            DE: c
        },
        d = _.Uk(a),
        c.Gi[d] = a,
        b.Gi[d] = a,
        b = b.PA,
        b.Gi[_.Uk(a)] = a,
        aR(b)) : b.ql && _.Xm(b.ql.bind(b))
    }
      , p2a = function(a) {
        return (a || []).map(b => {
            const c = b.path;
            let d = Infinity
              , e = Infinity
              , f = -Infinity
              , g = -Infinity;
            for (let k = 0, m = c.length; k < m; ) {
                var h = c[k++];
                d = Math.min(d, h);
                f = Math.max(f, h);
                h = c[k++];
                e = Math.min(e, h);
                g = Math.max(g, h)
            }
            h = new _.zm;
            h.minX = d;
            h.maxX = f;
            h.minY = e;
            h.maxY = g;
            return {
                JG: b,
                bounds: h,
                ...(c.length >= 50 && {
                    bD: o2a(c)
                })
            }
        }
        )
    }
      , s2a = function(a, b, c, d) {
        return a.map(e => {
            const f = e.path;
            e = e.Um;
            var g = null;
            if (b) {
                g = c ? q2a(f) : r2a(f, d);
                const h = new Map;
                h.set(0, 0);
                let k = 0;
                const m = [0];
                for (let p = 1, t = e.length; p < t; ++p) {
                    const u = e[p];
                    h.has(u) ? k = h.get(u) : (k += g(p - 1),
                    h.set(u, k));
                    m.push(k)
                }
                g = m
            }
            return {
                path: f,
                Um: g
            }
        }
        )
    }
      , r2a = function(a, b) {
        const c = a.slice(0);
        O0a(c, b);
        return d => {
            d *= 2;
            const e = c[d] - c[d + 2];
            d = c[d + 1] - c[d + 3];
            return Math.sqrt(e * e + d * d)
        }
    }
      , q2a = function(a) {
        return b => {
            b *= 2;
            const c = new _.sk(a[b],a[b + 1]);
            b = new _.sk(a[b + 2],a[b + 3]);
            return _.VC(c, b, 1)
        }
    }
      , w2a = function(a) {
        a.length && (a = t2a(a, u2a),
        a = t2a(a, v2a));
        return a
    }
      , t2a = function(a, b) {
        const c = [];
        let d = new SQ(0);
        const e = new SQ(0);
        let f = new SQ(0);
        const g = Array(a.length);
        g[0] = a[0];
        g[1] = a[1];
        CQ(a, d);
        for (let h = 2, k = 2; h < a.length; ) {
            c[0] = a[h];
            c[1] = a[h + 1];
            CQ(c, f);
            b(d, f, e) && (DQ(e, c),
            g[k++] = c[0],
            g[k++] = c[1]);
            g[k++] = a[h++];
            g[k++] = a[h++];
            const m = d;
            d = f;
            f = m
        }
        return g
    }
      , u2a = function(a, b, c) {
        if (a.z > 0 === b.z > 0)
            return !1;
        BQ(a, b, bR);
        BQ(bR, x2a, c);
        c.z = 0;
        if (AQ(c, c) < 1E-12)
            return !1;
        AQ(c, a) + AQ(c, b) < 0 && (c.x = -c.x,
        c.y = -c.y);
        return !0
    }
      , v2a = function(a, b, c) {
        BQ(a, b, bR);
        BQ(x2a, bR, cR);
        BQ(bR, cR, c);
        if (AQ(c, c) < 1E-12 || AQ(a, cR) > 0 === AQ(b, cR) > 0)
            return !1;
        AQ(c, a) + AQ(c, b) < 0 && (c.x = -c.x,
        c.y = -c.y,
        c.z = -c.z);
        return !0
    }
      , y2a = function(a, b, c) {
        if (!b)
            return null;
        const d = [];
        b.forEach(e => {
            var f = d.push;
            e = e.Eg;
            const g = e.length
              , h = Array(g * 2);
            for (let k = 0, m = 0; k < g; ++k) {
                const p = e[k];
                h[m++] = p.lat();
                h[m++] = p.lng()
            }
            f.call(d, h)
        }
        );
        if (a)
            for (const e of d)
                N0a(e);
        if (c)
            for (let e = 0, f = d.length; e < f; ++e)
                d[e] = w2a(d[e]);
        return d
    }
      , z2a = function(a) {
        return (a || []).map(b => {
            if (b.length) {
                var c = b[1];
                var d = [0];
                for (let e = 1, f = 1; e < b.length / 2; ++e,
                ++f) {
                    const g = b[2 * e + 1];
                    if (Math.abs(c - g) > 180) {
                        const h = g < c ? 1 : -1
                          , k = b[2 * e - 2]
                          , m = b[2 * e];
                        b.splice(2 * e, 0, m, g + 360 * h, m, g + 450 * h, 90, g + 450 * h, 90, c - 450 * h, k, c - 450 * h, k, c - 360 * h);
                        d.push(f, f, f, f, f, f - 1);
                        e += 6
                    }
                    d.push(f);
                    c = g
                }
                c = d
            } else
                c = [];
            return {
                path: b,
                Um: c
            }
        }
        )
    }
      , A2a = function(a) {
        return a.map(b => R1a(b, _.mq, .1))
    }
      , A1a = function(a, b) {
        var c = a.get("icons")
          , d = !a.tp && !!_.Fj(c);
        let e = !0;
        c = d ? c.map(k => {
            const m = U0a(k.offset) || B2a;
            k = U0a(k.repeat) || C2a;
            e = e && (m.value === 0 || m.unit === "%") && (k.value === 0 || k.unit === "%");
            return {
                offset: m,
                repeat: k
            }
        }
        ) : [];
        const f = a.get("geodesic");
        var g = y2a(a.tp, a.get("latLngs"), f);
        g = z2a(g);
        const h = f && e;
        f && d && !h && (g = A2a(g));
        g = s2a(g, d, h, b);
        b = p2a(g);
        if (b.length === 1)
            d = b[0].bounds;
        else {
            d = new _.zm;
            for (let k = 0, m = b.length; k < m; ++k)
                d.extendByBounds(b[k].bounds)
        }
        return {
            bounds: d,
            rz: a,
            geodesic: f,
            lJ: b,
            Gi: {},
            nL: c
        }
    }
      , z1a = function(a, b) {
        const c = b.tp
          , d = u => {
            const w = b.get(u);
            return c ? _.Nj(w, a.Eg[u]) : _.Nj(w, a.Hg[u])
        }
          , e = (b.get("zIndex") || 0) * 1E3 + _.Ea(b) % 1E3
          , f = c ? d("strokePosition") : a.Eg.strokePosition;
        var g = f === 0 ? 32 : 16;
        const h = Math.min(d("strokeWeight"), g)
          , k = d("strokeColor")
          , m = d("strokeOpacity");
        g = [];
        let p = 1;
        if (!c) {
            const u = b.get("icons") || [];
            g = u.map(y => {
                const z = a.Fg(y.icon || {}, k, m, h);
                z.rK = !y.fixedRotation;
                return z
            }
            );
            let w = 0;
            for (var t of g)
                w = Math.max(w, t.strokeOpacity),
                w = Math.max(w, t.fillOpacity);
            _.Kj(0, w) || (_.Kj(0, m) || _.Kj(0, h)) && g.length === 1 || (p = Math.max(w, m));
            _.Fj(u) && (t = b.get("map"),
            _.Cl(t, "Os"),
            _.M(t, 147754))
        }
        if (!(t = b.get("hitStrokeWeight")))
            a: switch (f) {
            case 1:
                t = 0;
                break a;
            case 2:
                t = h * 2;
                break a;
            default:
                t = h
            }
        return {
            strokeColor: k,
            strokeOpacity: m,
            strokeWeight: h,
            strokePosition: f,
            FI: t,
            ...(c && {
                fillColor: d("fillColor"),
                fillOpacity: d("fillOpacity")
            }),
            zIndex: e,
            clickable: d("clickable"),
            iF: g,
            mL: p,
            tp: c,
            Uw: !!b.Uw
        }
    }
      , H2a = function(a, b) {
        a.Fg = new D2a(a.tiles,a.Nh,b.Hj,a.Ig);
        a.Nh.Kg.register(a.Fg);
        a.Eg = E2a(a, b);
        _.wj("geometry").then(c => {
            a.geometry = c;
            a.Hg = new RQ( (d, e, f) => d.get("geodesic") && a.geometry != null ? new F2a(d,e,f,a.geometry.spherical.computeHeading,a.geometry.spherical.computeOffset,a.geometry.spherical.computeOffsetOrigin) : new G2a(d,e,f),a.map,b);
            MQ(a.map, a.Hg);
            a.Nh.Mg.forEach(d => {
                a.nj(d)
            }
            )
        }
        )
    }
      , E2a = function(a, b) {
        b = new dR(b);
        b.bindTo("panes", a.Nh);
        b.bindTo("projection", a.map);
        b.bindTo("zoom", a.Nh);
        b.bindTo("projectionCenterQ", a.Nh);
        b.bindTo("offset", a.Nh);
        _.Ok(a.map, "click", b, b.Kj);
        return b
    }
      , J2a = function(a) {
        const b = a.getVisible() != 0 ? a.getMap() : null;
        a.Ol !== b && (a.Ol && a.Ol.__gm.Mg.remove(a),
        b && (b.__gm.Mg.nj || new I2a(b),
        _.dn(b.__gm.Mg, a)),
        a.Ol = b)
    }
      , K2a = function(a, b, c) {
        if (!a || !b || !c)
            return null;
        var d = c.lat();
        const e = c.lng();
        c = b & 1 ? d : a.ei.lo;
        let f = b & 2 ? e : a.Hh.lo;
        d = b & 4 ? d : a.ei.hi;
        let g = b & 8 ? e : a.Hh.hi;
        if (c > d) {
            var h = c;
            c = d;
            d = h
        }
        b & 10 && !a.Hh.contains(e) && (h = _.ol(e, a.Hh.lo),
        a = _.ol(a.Hh.hi, e),
        b & 2 ? h > a : a > h) && (b = f,
        f = g,
        g = b);
        return _.vl(c, f, d, g)
    }
      , eR = function(a) {
        a && (a.unbindAll(),
        a.release(),
        _.Lk(a))
    }
      , R2a = function(a, b, c) {
        let d;
        d = c ? new GQ(a.Eg,L2a,M2a,!1,b.overlayMouseTarget,a.Kg,a.get("map"),a.Lg) : new GQ(a.Ig,N2a,O2a,!0,b.overlayMouseTarget,a.Kg,a.get("map"),a.Lg);
        d.bindTo("projection", a);
        d.bindTo("zoom", a);
        d.bindTo("projectionCenterQ", a);
        d.bindTo("panningEnabled", a);
        d.bindTo("mapPixelBounds", a);
        d.bindTo("color", a);
        d.bindTo("zIndex", a);
        d.bindTo("offset", a);
        const e = a.Xu
          , f = c ? P2a : Q2a;
        let g;
        _.Gk(d, "dragstart", h => {
            g = a.get("bounds");
            e.bindTo("freeVertexPosition", d);
            e.set("freeControlPoint", f[h]);
            e.set("map", a.get("map"))
        }
        );
        _.Gk(d, "dragend", (h, k, m) => {
            e.set("map", null);
            _.Sk(a, "toolbar", {
                show: !0,
                qw: m,
                action() {
                    a.set("bounds", g)
                }
            })
        }
        );
        _.Rk(d, "dragstart", a);
        _.Rk(d, "dragend", a);
        _.Rk(d, "panbynow", a);
        return d
    }
      , S2a = function(a, b, c) {
        a.Fg || (a.Fg = !0,
        b = K2a(a.get("bounds"), b, c),
        a.set("bounds", b),
        a.Fg = !1)
    }
      , V2a = function(a, b, c) {
        function d() {
            a.get("editable") ? T2a(a, b, c) : (U2a(a),
            _.Sk(a, "toolbar", {
                show: !1
            }))
        }
        a.editable_changed = d;
        d()
    }
      , T2a = function(a, b, c) {
        if (!a.VA) {
            var d = new _.hL(a,!0);
            a.Vq = d;
            var e = new W2a;
            e.bindTo("strokeColor", d);
            e.bindTo("strokeOpacity", d, "ghostStrokeOpacity");
            e.bindTo("strokeWeight", d);
            e.bindTo("bounds", a);
            e.bindTo("zIndex", a);
            a.Xu = e;
            var f = b.__gm;
            a.Aj = zQ(f);
            var g = _.SJ(f, a)
              , h = _.Xs() ? 9 : 0
              , k = new IQ;
            c = new X2a(e,function(m, p, t) {
                return new JQ(m,a.Aj,h,p,g,k,t)
            }
            ,c);
            c.set("map", b);
            c.bindTo("bounds", a);
            c.bindTo("panes", f);
            c.bindTo("projection", b);
            c.bindTo("zoom", f);
            c.bindTo("projectionCenterQ", f);
            c.bindTo("panningEnabled", b, "draggable");
            c.bindTo("mapPixelBounds", f, "pixelBounds");
            c.bindTo("offset", f);
            c.bindTo("color", d, "strokeColor");
            c.bindTo("zIndex", a);
            c.bindTo("suppressGhostControlPoints", a);
            a.VA = c;
            _.Rk(c, "panbynow", f);
            _.Rk(c, "toolbar", a)
        }
    }
      , U2a = function(a) {
        const b = a.VA;
        b && (b.unbindAll(),
        b.set("map", null),
        _.Lk(b),
        delete a.VA,
        a.Aj?.unbindAll(),
        a.Aj?.release(),
        delete a.Aj,
        a.Xu?.unbindAll(),
        delete a.Xu,
        a.Vq?.release(),
        delete a.Vq)
    }
      , Z2a = function(a, b) {
        a.Fg = new RQ( (c, d, e) => new Y2a(c,d,e),a.Eg,b);
        MQ(a.Eg, a.Fg);
        a.Nh.Og.forEach(c => {
            a.nj(c)
        }
        )
    }
      , a3a = function(a) {
        const b = a.getVisible() != 0 ? a.getMap() : null;
        a.Ol !== b && (a.Ol && a.Ol.__gm.Og.remove(a),
        b && (b.__gm.Og.nj || new $2a(b),
        _.dn(b.__gm.Og, a)),
        a.Ol = b)
    }
      , KQ = "click dblclick mousedown mousemove mouseout mouseover mouseup rightclick contextmenu".split(" ")
      , T0a = {};
    var SQ = class {
        constructor(a) {
            this.y = this.x = 0;
            this.z = a
        }
        equals(a) {
            return this.x === a.x && this.y === a.y && this.z === a.z
        }
    }
    ;
    var GQ = class extends _.Vk {
        constructor(a, b, c, d, e, f, g, h) {
            super();
            this.Og = a;
            this.Kg = b;
            this.Jg = c;
            this.Hg = d;
            this.Ng = f;
            this.map = g;
            this.ah = h;
            this.Eg = [];
            this.Yg = _.Ss("div", e, _.Wl);
            a.forEach(this.Ig.bind(this));
            const k = () => {
                this.Hg || _.Sk(this, "toolbar", {
                    show: !1
                })
            }
            ;
            this.Lg = [_.Gk(a, "insert_at", m => {
                this.Ig(a.getAt(m), m);
                Y0a(this, m + 1);
                k()
            }
            ), _.Gk(a, "remove_at", m => {
                const p = this.Eg[m];
                this.Eg.splice(m, 1);
                this.Mg(p);
                Y0a(this, m);
                k()
            }
            ), _.Gk(a, "set_at", m => {
                this.Eg[m].to.set("latLngPosition", a.getAt(m));
                k()
            }
            )]
        }
        release() {
            this.Lg.forEach(_.Ik);
            this.Lg.length = 0;
            this.Eg.forEach(this.Mg.bind(this));
            this.Eg.length = 0;
            _.Lk(this.Yg);
            _.oj(this.Yg)
        }
        zIndex_changed() {
            let a = this.get("zIndex") || 0;
            this.Hg && --a;
            _.Ts(this.Yg, a)
        }
        Ig(a, b) {
            const c = {};
            c.index = b;
            this.Eg.splice(b, 0, c);
            c.constraint = this.Jg[b % this.Jg.length];
            const d = this.Ng(this.Yg, this.Kg[b % this.Kg.length], this.Hg);
            d.bindTo("color", this);
            d.bindTo("panningEnabled", this);
            d.bindTo("mapPixelBounds", this);
            c.to = d;
            b = [_.Rk(d, "panbynow", this)];
            const e = a && this.map ? _.Ds(a, this.map.getProjection()) : null;
            d.set("latLngPosition", a);
            c.qv = !0;
            c.ep = null;
            c.Ts = null;
            a = new _.bL(this.ah.Hj,{
                Wn: f => {
                    f ? d.set("position", new _.Il(f.hh,f.kh)) : d.set("position", null)
                }
                ,
                ms: () => {}
            },e,this.ah, () => {
                if (this.map) {
                    var f = c.Fj.getPosition();
                    f && (f = _.wm(f, this.map.getProjection()),
                    c.qv = !1,
                    c.to.set("latLngPosition", f),
                    c.qv = !0)
                }
            }
            );
            this.ah.Ii(a);
            c.Fj = a;
            b.push(_.Gk(d, "latlngposition_changed", () => {
                if (c.qv && this.map) {
                    var f = c.to.get("latLngPosition");
                    f ? c.Fj.setPosition(_.Ds(f, this.map.get("projection"))) : c.Fj.setPosition(null)
                }
            }
            ));
            b.push(_.Gk(d, "dragstart", () => {
                this.gm(c)
            }
            ));
            b.push(_.Gk(d, "dragend", () => {
                this.Fm(c)
            }
            ));
            b.push(_.Gk(d, "deltaclientposition_changed", () => {
                this.fn(c)
            }
            ));
            b.push(_.Gk(d, "dragstart", f => {
                this.bindTo("freeVertexPosition", d, "latLngPosition");
                EQ(this, c, "dragstart", f)
            }
            ));
            b.push(_.Gk(d, "dragend", f => {
                this.Og.setAt(c.index, d.get("latLngPosition"));
                EQ(this, c, "dragend", f)
            }
            ));
            for (const f of KQ)
                b.push(_.Gk(d, f, g => {
                    EQ(this, c, f, g)
                }
                ));
            c.ph = b
        }
        gm(a) {
            a.ep = a.Fj.Ym();
            a.ep && _.WJ(a.Fj, a.ep)
        }
        Fm(a) {
            var b = a.Fj.getPosition();
            if (b && this.map && (b = _.wm(b, this.map.get("projection")),
            b = Z0a(this, a, b)) && (b = _.Ds(b, this.map.get("projection")),
            b = a.Fj.Ym(b),
            b = $0a(a, b)) && (b = a.Fj.getPosition(b))) {
                const c = _.wm(b, this.map.get("projection"));
                a.qv = !1;
                a.to.set("latLngPosition", c);
                a.qv = !0;
                a.Fj.setPosition(b)
            }
            a.ep = null;
            a.Ts = null
        }
        fn(a) {
            var b = a.to.get("deltaClientPosition");
            if (b && (a.ep || a.Ts) && this.map) {
                var c = a.Ts || a.ep;
                a.Ts = {
                    clientX: c.clientX + b.clientX,
                    clientY: c.clientY + b.clientY
                };
                b = this.ah.Jl(a.Ts);
                b = _.wm(b, this.map.get("projection"));
                c = a.Ts;
                var d = Z0a(this, a, b);
                d && !d.equals(b) && (b = _.Ds(d, this.map.get("projection")),
                c = a.Fj.Ym(b));
                (c = $0a(a, c)) && _.WJ(a.Fj, c)
            }
        }
        Mg(a) {
            a.to.unbindAll();
            a.to.release();
            a.Fj && this.ah.vl(a.Fj);
            a.ph.forEach(_.Ik);
            a.ph.length = 0
        }
    }
    ;
    var j1a = class extends _.Vk {
        center_changed() {
            FQ(this)
        }
        radius_changed() {
            FQ(this)
        }
        planetRadius_changed() {
            FQ(this)
        }
        constructor(a, b, c) {
            super();
            this.Wu = a;
            this.ah = c;
            this.Ig = null;
            this.Hg = this.Fg = !1;
            this.Jg = b;
            this.Eg = new _.ym;
            _.Ok(this.Eg, "set_at", this, this.Kg)
        }
        map_changed() {
            this.get("map") || (this.Wu.set("map", null),
            a1a(this),
            _.Lk(this.Eg))
        }
        panes_changed() {
            a1a(this);
            this.Ig = d1a(this)
        }
        Kg(a) {
            if (!this.Hg) {
                var b = this.Eg.getAt(a);
                if (a === 0)
                    _.bE(this, function() {
                        this.Fg = !0;
                        this.set("center", b);
                        this.Fg = !1
                    }, 0);
                else {
                    const c = _.VC(this.get("center"), b, this.get("planetRadius"));
                    _.bE(this, function() {
                        this.Fg = !0;
                        this.set("radius", c);
                        this.Fg = !1
                    }, 0)
                }
            }
        }
    }
      , b1a = ["pointer", "row-resize", "row-resize", "col-resize", "col-resize"]
      , c1a = [0, 2, 2, 1, 1];
    var IQ = class {
        construct(a, b, c, d, e) {
            a = _.Ss("div", a, new _.Il(b,b), new _.Kl(c,c));
            a.style.borderWidth = _.ns(d);
            a.style.borderStyle = "solid";
            a.style.borderRadius = _.ns(Math.ceil(c / 2 + d));
            _.kE(a, e)
        }
        setFillColor(a, b) {
            a.firstChild.style.backgroundColor = b
        }
    }
    ;
    var i1a = class extends _.Vk {
        constructor() {
            super();
            const a = new _.wo({
                clickable: !1,
                fillOpacity: 0
            });
            a.bindTo("map", this);
            a.bindTo("strokeColor", this);
            a.bindTo("strokeOpacity", this);
            a.bindTo("strokeWeight", this);
            var b = ["center", "freeVertexPosition", "freeVertexIsCenter"]
              , c = new _.gK(b,"return",e1a);
            _.fE(c, b, this);
            a.bindTo("center", c, "return");
            b = ["center", "radius", "planetRadius", "freeVertexPosition", "freeVertexIsCenter"];
            c = new _.gK(b,"return", (d, e, f, g, h) => !h && g && d ? _.VC(g, d, f) : e);
            _.fE(c, b, this);
            a.bindTo("radius", c, "return");
            this.Eg = _.hK();
            this.Eg.bindTo("zIndex", this);
            a.bindTo("zIndex", this.Eg, "ghostZIndex")
        }
    }
    ;
    var JQ = class extends _.Vk {
        constructor(a, b, c, d, e, f, g) {
            super();
            this.Og = e;
            this.Fg = !1;
            a = _.Ss("div", a);
            a.style.display = "none";
            e = 9 + 2 * (1 + c);
            _.pn(a, new _.Kl(e,e));
            f.construct(a, c, 9, 1, g ? .5 : 1);
            g = new _.yKa(a,!0);
            g.bindTo("containerPixelBounds", this, "mapPixelBounds");
            g.bindTo("panningEnabled", this);
            g.set("draggableCursor", d);
            g.bindTo("position", this);
            g.bindTo("deltaClientPosition", this);
            this.Eg = a;
            this.Lg = b;
            this.Mg = c;
            this.Hg = g;
            this.Ng = f;
            this.Ig = [_.Gk(g, "dragstart", () => {
                b.set("draggableCursor", d);
                b.set("active", !0)
            }
            ), _.Gk(g, "dragend", () => {
                b.set("active", !1)
            }
            ), _.Rk(g, "panbynow", this), _.Rk(g, "dragstart", this), _.Rk(g, "dragend", this)];
            this.Jg = _.ou(a, {
                lk: h => {
                    _.$t(h);
                    _.Sk(this, "mousedown", h.Eg)
                }
                ,
                Fq: h => {
                    _.au(h);
                    _.Sk(this, "mousemove", h.Eg)
                }
                ,
                rl: h => {
                    _.au(h);
                    _.Sk(this, "mousemove", h.Eg)
                }
                ,
                Fk: h => {
                    _.bu(h);
                    _.Sk(this, "mouseup", h.Eg)
                }
                ,
                Pl: ({event: h, Aq: k}) => {
                    _.ps(h.Eg);
                    h.button === 3 ? k || _.Sk(this, "rightclick", h.Eg) : k ? _.Sk(this, "dblclick", h.Eg) : _.Sk(this, "click", h.Eg)
                }
                ,
                xt: h => {
                    _.cu(h);
                    _.Sk(this, "contextmenu", h.Eg)
                }
            });
            this.Kg = new _.ty(a,a,{
                fs: h => {
                    this.Fg = !1;
                    HQ(this);
                    _.Dk(h);
                    _.Ek(h);
                    _.Sk(this, "mouseout", h)
                }
                ,
                gs: h => {
                    this.Fg = !0;
                    HQ(this);
                    _.Dk(h);
                    _.Ek(h);
                    _.Sk(this, "mouseover", h)
                }
            })
        }
        release() {
            _.oj(this.Eg);
            this.Ig.forEach(_.Ik);
            this.Ig.length = 0;
            this.Jg.remove();
            this.Kg.remove();
            this.Hg.unbindAll();
            this.Hg.release();
            this.Lg.set("active", !1)
        }
        position_changed() {
            const a = this.get("position");
            if (a) {
                this.Eg.style.display = "block";
                var b = 5 + this.Mg;
                _.Rs(this.Eg, new _.Il(a.x - b,a.y - b))
            } else
                this.Eg.style.display = "none"
        }
        color_changed() {
            const a = this.get("color");
            this.Eg.firstChild.style.borderColor = a;
            HQ(this)
        }
    }
    ;
    var n1a = class {
        constructor(a, b, c, d, e) {
            this.Hg = a;
            this.Fg = c;
            a = a.get("center");
            b = c.fromDivPixelToLatLng(b);
            this.Ig = d(a, b);
            this.Eg = _.VC(b, a);
            this.computeOffsetOrigin = e
        }
        moveTo(a) {
            a = this.Fg.fromDivPixelToLatLng(a);
            var b = this.computeOffsetOrigin(a, this.Eg, this.Ig);
            b || (b = _.VC(a, b3a) - this.Eg,
            a = _.VC(a, c3a) - this.Eg,
            b = Math.abs(b) < Math.abs(a) ? b3a : c3a);
            this.Hg.set("center", b)
        }
    }
      , b3a = new _.sk(90,0)
      , c3a = new _.sk(-90,0);
    _.Ja(LQ, _.Vk);
    LQ.prototype.center_changed = function() {
        _.$m(this.Hg)
    }
    ;
    LQ.prototype.radius_changed = function() {
        _.$m(this.Hg)
    }
    ;
    LQ.prototype.planetRadius_changed = function() {
        _.$m(this.Hg)
    }
    ;
    LQ.prototype.release = function() {
        const a = this.Eg;
        for (let b = 0, c = a.length; b < c; ++b)
            _.Ik(a[b]);
        this.Eg = null;
        this.Fg.unbindAll();
        this.Fg = null
    }
    ;
    var fR = new _.Kl(30,30)
      , d3a = new _.Il(fR.width / 2,fR.height / 2)
      , RQ = class extends _.Vk {
        constructor(a, b, c) {
            super();
            this.Sg = a;
            this.Fg = this.Ig = this.Og = this.Mg = this.Eg = null;
            this.Ng = !1;
            this.Kg = b;
            this.Hg = new _.bL(c.Hj,{
                Wn: d => {
                    d && this.set("position", new _.Il(d.hh,d.kh))
                }
                ,
                ms: () => {}
            },null,c);
            c.Ii(this.Hg);
            this.Jg = new _.IK( (d, e) => {
                _.Sk(this, "panbynow", d, e)
            }
            );
            a = new _.gK(["waitingForQuiver", "dragging"],"active", (d, e) => d || e);
            a.bindTo("dragging", this, null, !0);
            a.bindTo("waitingForQuiver", this, null, !0);
            this.bindTo("active", a, null, !0)
        }
        release() {
            this.Jg.release();
            this.Fg && this.Fg.forEach(_.Ik);
            this.Fg = null
        }
        Qg(a) {
            if (this.get("draggable") && this.Eg && (!a.domEvent || !_.Yq(a.domEvent)) && (a.stop(),
            !this.get("dragging") && a.latLng)) {
                this.Lg = a;
                this.set("position", this.Ig.fromLatLngToDivPixel(a.latLng));
                var b = _.Ds(a.latLng, this.Kg.getProjection());
                (b = this.Hg.Ym(b)) && _.WJ(this.Hg, b);
                b = this.get("position");
                this.set("dragging", !0);
                this.set("waitingForQuiver", !1);
                this.Og = this.Sg(this.Eg, b, this.Ig);
                QQ(this, "dragstart", a);
                this.Ng = this.Eg.get("editable");
                this.Eg.set("editable", !1);
                this.set("storeEditable", !0)
            }
        }
        Rg(a) {
            this.get("dragging") && (this.Lg = a,
            a.latLng && (a = _.Ds(a.latLng, this.Kg.getProjection()),
            (a = this.Hg.Ym(a)) && _.WJ(this.Hg, a)))
        }
        Pg(a) {
            if (this.get("dragging")) {
                var b = this.Hg.getPosition();
                if (b) {
                    var c = _.wm(b, this.Kg.getProjection());
                    c = this.Ig.fromLatLngToDivPixel(c);
                    this.Lg = a;
                    this.set("position", c);
                    this.Hg.setPosition(b)
                }
                this.set("storeEditable", !1);
                this.Eg.set("editable", this.Ng);
                QQ(this, "dragend", a);
                this.set("dragging", !1)
            }
        }
        position_changed() {
            const a = this.get("position");
            a ? _.qJ(this.Jg, _.wIa(a, fR, d3a)) : _.qJ(this.Jg, null);
            this.get("dragging") && (this.Og.moveTo(a),
            QQ(this, "drag", this.Lg))
        }
        containerPixelBounds_changed() {
            _.sJ(this.Jg, this.get("containerPixelBounds"))
        }
        Tg() {
            this.get("dragging") || this.set("waitingForQuiver", !0)
        }
        Ug() {
            this.set("waitingForQuiver", !1)
        }
        active_changed() {
            PQ(this)
        }
        panes_changed() {
            PQ(this)
        }
        poly_changed() {
            PQ(this)
        }
        projectionController_changed() {
            PQ(this)
        }
        dragging_changed() {
            m1a(this)
        }
        panningEnabled_changed() {
            m1a(this)
        }
    }
    ;
    var p1a = class {
        constructor(a) {
            this.map = a;
            this.ah = this.Eg = null;
            this.Nh = a.__gm;
            this.Nh.Fg.then( ({ah: b}) => {
                this.ah = b;
                o1a(this, b)
            }
            );
            this.Nh.Ng.nj = b => {
                this.nj(b)
            }
            ;
            this.Nh.Ng.onRemove = b => {
                this.onRemove(b)
            }
        }
        nj(a) {
            if (this.Eg && this.ah) {
                var b = new _.gK(["baseMapType"],"planetRadius",_.bea);
                b.bindTo("baseMapType", this.Nh);
                var c = a.GC = new LQ(a);
                c.set("map", this.map);
                c.bindTo("radius", a);
                c.bindTo("center", a);
                c.bindTo("capturing", a);
                c.bindTo("clickable", a);
                c.bindTo("cursor", a);
                c.bindTo("fillColor", a);
                c.bindTo("fillOpacity", a);
                c.bindTo("strokeColor", a);
                c.bindTo("strokeOpacity", a);
                c.bindTo("strokeWeight", a);
                c.bindTo("strokePosition", a);
                c.bindTo("zIndex", a);
                c.bindTo("suppressUndo", a);
                c.bindTo("planetRadius", b);
                var d = [];
                KQ.forEach(e => {
                    d.push(_.Rk(c, e, a))
                }
                );
                d.push(_.Rk(a, "toolbar", c));
                a.ph = d;
                NQ(a, this.Eg);
                h1a(a, this.map, b, this.ah);
                _.M(this.map, 147750)
            }
        }
        onRemove(a) {
            if (this.ah) {
                var b = a.GC;
                b.unbindAll();
                b.set("map", null);
                b.release();
                delete a.GC;
                a.ph && a.ph.forEach(_.Ik);
                delete a.ph;
                OQ(a);
                delete a.editable_changed;
                g1a(a)
            }
        }
    }
    ;
    var F2a = class {
        constructor(a, b, c, d, e, f) {
            this.poly = a;
            this.Ig = c;
            this.computeOffset = e;
            this.computeOffsetOrigin = f;
            const g = r1a(this);
            b = c.fromDivPixelToLatLng(b);
            this.Jg = _.VC(g, b);
            this.Kg = d(g, b);
            const h = [];
            this.Hg = h;
            a.get("latLngs").forEach(k => {
                const m = [];
                k.forEach(p => {
                    m.push({
                        heading: d(g, p),
                        distance: _.VC(p, g)
                    })
                }
                );
                h.push(m)
            }
            );
            this.Eg = g;
            this.Fg = b.lng() - g.lng()
        }
        moveTo(a) {
            a = this.Ig.fromDivPixelToLatLng(a);
            let b = this.computeOffsetOrigin(a, this.Jg, this.Kg);
            b ? Math.abs(b.lat()) > 89 && (b = new _.sk(_.Ij(b.lat(), -89, 89),b.lng())) : b = new _.sk(this.Eg.lat(),a.lng() - this.Fg);
            this.poly.get("latLngs").forEach( (c, d) => {
                for (let e = 0, f = c.getLength(); e < f; ++e) {
                    const g = this.computeOffset(b, this.Hg[d][e].distance, this.Hg[d][e].heading);
                    c.setAt(e, g)
                }
            }
            );
            this.Eg = b;
            this.Fg = a.lng() - b.lng()
        }
    }
    ;
    var s1a = class extends _.Vk {
        constructor() {
            super(...arguments);
            this.zIndex = Infinity
        }
        vs(a) {
            return a !== "dragstart" && a !== "drag" && a !== "dragend"
        }
        Ds() {
            return this.get("active") ? this : null
        }
        handleEvent(a, b, c) {
            if (a === "mouseout")
                this.set("cursor", "");
            else if (a === "mouseover") {
                const d = this.get("draggableCursor");
                d && this.set("cursor", d)
            }
            _.Sk(c, a, new _.uy(b.latLng,b.domEvent))
        }
    }
    ;
    var v1a = {
        latLngs: 1,
        geodesic: 1,
        icons: 1
    }
      , w1a = {
        strokeColor: 1,
        strokeOpacity: 1,
        strokePosition: 1,
        strokeWeight: 1,
        fillColor: 1,
        fillOpacity: 1,
        hitStrokeWeight: 1,
        zIndex: 1,
        clickable: 1,
        icons: 1
    }
      , f3a = class extends _.Vk {
        constructor(a, b) {
            var c = new e3a;
            super();
            this.Jg = a;
            this.Hg = b;
            this.Ig = c;
            this.Fg = {};
            this.Eg = {};
            this.timeout = 0;
            const d = this;
            this.Kg = function(e) {
                y1a(d, this, e)
            }
            ;
            a.nj = e => {
                this.Gq(e)
            }
            ;
            a.onRemove = e => {
                this.hs(e)
            }
        }
        projection_changed() {
            const a = this;
            a.Jg.forEach(b => {
                if (b.get("icons")) {
                    const c = _.Uk(b);
                    a.Eg[c] = b;
                    UQ(b)
                }
            }
            );
            x1a(a)
        }
        Gq(a) {
            var b = this.get("projection");
            b = a.Qx = {
                style: z1a(this.Ig, a),
                geometry: A1a(a, b)
            };
            B1a(this, a);
            a.changed = this.Kg;
            _.dn(this.Hg, b)
        }
        hs(a) {
            const b = a.Qx;
            delete a.Qx;
            this.Hg.remove(b);
            delete a.changed;
            UQ(a);
            a = _.Uk(a);
            delete this.Fg[a];
            delete this.Eg[a]
        }
    }
    ;
    var H1a = class {
        constructor(a) {
            const b = this;
            this.Eg = a;
            _.Gk(a, "set_at", c => {
                _.Sk(b, "set_at", c);
                const d = a.getLength();
                c === 0 && d > 1 && _.Sk(b, "set_at", d)
            }
            );
            _.Gk(a, "insert_at", c => {
                _.Sk(b, "insert_at", c);
                const d = a.getLength();
                d === 2 ? _.Sk(b, "insert_at", 2) : c === 0 && d > 1 && _.Sk(b, "set_at", d)
            }
            );
            _.Gk(a, "remove_at", c => {
                _.Sk(b, "remove_at", c);
                const d = a.getLength();
                d === 1 ? _.Sk(b, "remove_at", 1) : c === 0 && d > 1 && _.Sk(b, "set_at", d)
            }
            )
        }
        getLength() {
            let a = this.Eg.getLength();
            a > 1 && ++a;
            return a
        }
        getAt(a) {
            this.Eg.getLength() === a && a > 1 && (a = 0);
            return this.Eg.getAt(a)
        }
    }
    ;
    var I1a = class extends _.Vk {
        constructor(a, b, c) {
            super();
            this.Eg = a;
            this.Fg = b;
            this.interpolate = c;
            this.ph = [_.Ok(a, "set_at", this, this.Jg), _.Ok(a, "insert_at", this, this.Hg), _.Ok(a, "remove_at", this, this.Ig)];
            for (let d = 0, e = a.getLength(); d < e; ++d)
                this.Hg(d)
        }
        release() {
            this.ph.forEach(_.Ik)
        }
        geodesic_changed() {
            C1a(this)
        }
        projection_changed() {
            C1a(this)
        }
        Jg(a) {
            D1a(this, !1, a)
        }
        Hg(a) {
            D1a(this, !0, a)
        }
        Ig(a) {
            const b = this.get("projection");
            if (b) {
                var c = this.Eg
                  , d = this.Fg
                  , e = this.get("geodesic");
                a < c.getLength() ? (a > 0 && d.setAt(a - 1, VQ(c.getAt(a - 1), c.getAt(a), e, b, this.interpolate)),
                d.removeAt(a)) : a > 0 && d.removeAt(a - 1)
            }
        }
    }
    ;
    var F1a = class extends _.uy {
        constructor(a, b, c, d, e) {
            super(a, b);
            c !== void 0 && (this.path = c);
            d !== void 0 && (this.vertex = d);
            e !== void 0 && (this.edge = e)
        }
    }
    ;
    var ZQ = class extends _.Vk {
        constructor(a, b, c, d, e) {
            super();
            this.Ig = a;
            this.Hg = b;
            this.Kg = c;
            this.Mg = d;
            this.Fg = [];
            this.Eg = [];
            this.Jg = [];
            this.Lg = e
        }
        map_changed() {
            this.get("map") || (this.Ig.set("map", null),
            E1a(this))
        }
    }
    ;
    ZQ.prototype.panes_changed = ZQ.prototype.paths_changed = ZQ.prototype.suppressGhostControlPoints_changed = function() {
        const a = this;
        E1a(a);
        const b = a.get("paths");
        var c = a.get("panes");
        if (b && c) {
            var d = c.overlayMouseTarget;
            b.forEach(function(f) {
                a.Fg.push(XQ(a, f, d));
                a.get("suppressGhostControlPoints") || a.Eg.push(YQ(a, f, d))
            });
            var e = function() {
                _.Sk(a, "toolbar", {
                    show: !1
                })
            };
            e();
            c = a.Jg;
            c.push(_.Gk(b, "insert_at", function(f) {
                const g = a.get("suppressGhostControlPoints")
                  , h = b.getAt(f);
                a.Fg.splice(f, 0, XQ(a, h, d));
                g || a.Eg.splice(f, 0, YQ(a, h, d));
                e()
            }));
            c.push(_.Gk(b, "remove_at", function(f) {
                const g = a.get("suppressGhostControlPoints");
                WQ(a.Fg[f]);
                a.Fg.splice(f, 1);
                g || (WQ(a.Eg[f]),
                a.Eg.splice(f, 1));
                e()
            }));
            c.push(_.Gk(b, "set_at", function(f) {
                const g = a.get("suppressGhostControlPoints");
                WQ(a.Fg[f]);
                const h = b.getAt(f);
                a.Fg[f] = XQ(a, h, d);
                g || (WQ(a.Eg[f]),
                a.Eg[f] = YQ(a, h, d));
                e()
            }))
        }
    }
    ;
    var dR = class extends _.Vk {
        constructor(a) {
            super();
            this.Fg = this.Ig = null;
            this.Eg = document.createElement("button");
            this.Eg.type = "button";
            this.Eg.style.background = "transparent";
            this.Eg.style.border = "none";
            this.Eg.style.margin = "0";
            this.Eg.style.padding = "0";
            this.Eg.title = "Undo last edit";
            this.Eg.setAttribute("aria-label", "Undo last edit");
            const b = document.createElement("span");
            b.style.display = "inline-block";
            this.Eg.appendChild(b);
            _.Ts(this.Eg, -202);
            this.Eg.style.cursor = "pointer";
            this.Eg.style.display = "none";
            this.Mg = _.FG(g3a, b, _.Wl, h3a);
            this.Mg.style.position = "relative";
            _.Ok(this, "toolbar", this, this.Kg);
            this.Jg = new _.bL(a.Hj,{
                Wn: c => {
                    c && (c = new _.Il(c.hh,c.kh),
                    _.Rs(this.Eg, new _.Il(c.x + i3a.x,c.y + i3a.y)))
                }
                ,
                ms: () => {}
            },null,a);
            a.Ii(this.Jg);
            _.ou(this.Eg, {
                lk: c => {
                    _.$t(c);
                    this.Hg(j3a)
                }
                ,
                Fq: c => {
                    _.au(c)
                }
                ,
                rl: c => {
                    _.au(c)
                }
                ,
                Fk: c => {
                    _.bu(c)
                }
                ,
                Pl: ({event: c}) => {
                    _.ps(c.Eg);
                    c = c.Eg;
                    _.Dk(c);
                    _.Ek(c);
                    this.Ig();
                    this.Kj()
                }
                ,
                kq: {
                    gm: (c, d) => {
                        _.qBa(d)
                    }
                    ,
                    fn: () => {}
                    ,
                    Fm: () => {}
                }
            });
            new _.ty(this.Eg,this.Eg,{
                fs: this.Hg.bind(this, _.Wl),
                gs: this.Hg.bind(this, k3a)
            })
        }
        panes_changed() {
            const a = this.get("panes");
            a ? a.floatPane.appendChild(this.Eg) : this.Eg.parentNode && _.oj(this.Eg)
        }
        Kj() {
            this.Eg.style.display = "none";
            this.Ig = null;
            M1a(this);
            this.Fg = null
        }
        Kg(a) {
            a.show && a.poly ? a.poly.get("suppressUndo") ? this.Kj() : (a.qw && this.Jg.setPosition(a.qw),
            N1a(this, a.action || null, a.poly)) : a.poly === this.Fg && this.Kj()
        }
        Hg(a) {
            _.GG(this.Mg, h3a, a)
        }
    }
      , g3a = _.mo("undo_poly")
      , h3a = new _.Kl(30,27)
      , k3a = new _.Il(30,0)
      , j3a = new _.Il(60,0)
      , i3a = new _.Il(10,-11);
    dR.prototype.changed = dR.prototype.Kj;
    var D2a = class {
        constructor(a, b, c, d) {
            this.Fg = b;
            this.Hg = d;
            this.Eg = null;
            this.Ck = !1;
            this.zIndex = 30;
            this.Ig = new _.cL(a.Eg,c,d)
        }
        vs(a, b) {
            if (a !== "dragstart" && a !== "drag" && a !== "dragend")
                return !0;
            a = (a = (b.ou || b).get("map")) && a.get("draggable") !== !1 && a.get("gestureHandling") !== "none";
            return !!this.Eg || !a
        }
        Ds(a, b) {
            var c = this.Hg.get();
            if (!c)
                return null;
            c = c.Dh.size;
            const d = _.XJ(this.Ig, a.ni, l3a);
            if (!d)
                return null;
            const e = new _.Il(d.bt.rh * c.hh,d.bt.sh * c.kh)
              , f = new _.Il(d.pn.rh * c.hh,d.pn.sh * c.kh)
              , g = [];
            var h = d.Wj.Gi;
            for (var k of Object.values(h))
                g.push(k);
            g.reverse();
            g.sort( (t, u) => u.zIndex - t.zIndex || 0);
            k = null;
            h = b ? 15 : 0;
            for (let t = 0, u = g.length; t < u; ++t) {
                var m = g[t];
                const w = m.OA;
                if (!w.clickable)
                    continue;
                const y = m.DE.rz;
                var p = w.FI / 2 + h;
                m = O1a(m.paths);
                if (p = R0a(e.x, e.y, p, m)) {
                    k = y;
                    b = this.Hg.get();
                    b = _.Nw(b && b.Dh, {
                        rh: (p[0] + f.x) / c.hh,
                        sh: (p[1] + f.y) / c.kh,
                        Ah: d.pn.Ah
                    });
                    a.ni = new _.Il(b.Eg,b.Fg);
                    a.latLng = _.wm(b);
                    break
                }
                if (w.tp && !b && Q0a(e.x, e.y, m)) {
                    k = y;
                    break
                }
            }
            return k
        }
        handleEvent(a, b, c) {
            !this.Eg || a !== "mousedown" && a !== "dragstart" && a !== "drag" || (this.Ck = !0);
            this.Eg && !this.Ck && (b.ni = this.Eg.ni,
            b.latLng = this.Eg.latLng);
            var d = c.ou || c;
            !this.Eg && a === "mousedown" && d.get("draggable") && (this.Eg = b,
            c.set("capturing", !0));
            d = c;
            if (this.Eg) {
                if (this.Ck && a === "dragend" || !this.Ck && a === "mouseup")
                    this.Ck = !1,
                    this.Eg = null,
                    c.set("capturing", !1);
                a !== "dragstart" && a !== "drag" && a !== "dragend" || !c.ou || (d = c.ou);
                a === "dragstart" && (a = "movestart");
                a === "drag" && (a = "move");
                a === "dragend" && (a = "moveend")
            } else {
                if (a === "dragstart" || a === "dragend")
                    return;
                a === "drag" && (a = "mousemove")
            }
            a === "mouseout" ? this.Fg.set("cursor", "") : a === "mousemove" && (c = c.get && c.get("cursor"),
            c === void 0 && (c = "pointer"),
            this.Fg.set("cursor", c));
            _.Sk(d, a, new F1a(b.latLng,b.domEvent))
        }
    }
      , l3a = new _.Il(.5,.5);
    var o2a = () => []
      , V1a = () => {}
    ;
    o2a = a => {
        const b = []
          , c = a.length - 2;
        let d;
        for (let k = 2; k < c; k <<= 1) {
            var e = a[0]
              , f = a[1];
            const m = Math.ceil(c / (2 * k))
              , p = Array(m);
            let t = 0;
            for (let u = 0, w = a.length - 1 - k; u < w; ) {
                u += k;
                var g = a[u]
                  , h = a[u + 1];
                u += k;
                u > a.length - 2 && (u = a.length - 2);
                const y = a[u]
                  , z = a[u + 1]
                  , B = g - e
                  , D = h - f;
                e = y - e;
                const G = z - f
                  , I = B * e + D * G;
                f = e * e + G * G;
                I >= f ? (g = y - g,
                h = z - h,
                h = g * g + h * h) : I <= 0 ? h = B * B + D * D : (h = B * G - D * e,
                h *= h,
                h /= f + 1E-16);
                h = Math.sqrt(h);
                d && (h += Math.max(d[2 * t], d[2 * t + 1] || 0));
                p[t++] = h;
                e = y;
                f = z
            }
            t < m && (p[t] = d ? d[2 * t] : 0);
            d = p;
            b.push(p)
        }
        return b
    }
    ;
    V1a = (a, b, c, d) => {
        --b;
        if (!(b < 0)) {
            var e = a.length
              , f = 0;
            for (d(0); f < b; ) {
                const g = 1 << e
                  , h = e ? a[e - 1][f / g] : 0;
                let k = f + g;
                k >= b && (k = b);
                e && c(f, k, h) ? --e : (d(k),
                f = k,
                f & g || ++e)
            }
        }
    }
    ;
    var m3a = class {
        constructor(a, b, c, d) {
            this.zoom = b;
            this.Dh = d;
            d = _.YC(this.Dh, {
                rh: a.x,
                sh: a.y,
                Ah: b
            }, 16 / d.size.hh);
            d = _.Am(d.min.Eg, d.min.Fg, d.max.Eg, d.max.Fg);
            this.projection = _.vm(c);
            var e = d
              , f = new _.Im(e.minX,e.minY);
            e = new _.Im(e.maxX,e.maxY);
            d = _.wm(f, c, !0);
            var g = _.wm(e, c, !0);
            e = Math.min(d.lat(), g.lat());
            f = Math.max(d.lat(), g.lat());
            var h = Math.min(d.lng(), g.lng());
            g = Math.max(d.lng(), g.lng());
            d = (h + g) / 2;
            const k = _.Jj(d, -180, 180);
            h += k - d;
            g += k - d;
            d = _.Am(e, h, f, g);
            e = new _.sk(e,h,!0);
            h = new _.sk(f,g,!0);
            f = _.Ds(e, c);
            f = new _.Il(f.Eg,f.Fg);
            e = _.Ds(h, c);
            e = new _.zm([f, new _.Il(e.Eg,e.Fg)]);
            this.Eg = d;
            this.Hg = e;
            this.pn = a;
            a = 1 << b;
            b = this.projection;
            c = .5 / a;
            d = this.Hg;
            this.Ig = Math.min(V0a(b, c, new _.Il(d.minX,d.minY)), V0a(b, c, new _.Il(d.maxX,d.maxY)));
            this.Jg = W1a(this.Eg, this.Ig, this.projection);
            this.Fg = S1a(a)
        }
        getBounds() {
            return this.Eg
        }
    }
    ;
    var n3a = class extends _.co {
        constructor(a, b, c) {
            super();
            this.tiles = a;
            this.Ig = Math.min(2, _.lo());
            this.Jg = b;
            this.Fg = c || _.Jy
        }
        Eg() {
            return {
                Dh: this.Fg,
                ol: 2,
                Nk: this.Hg.bind(this)
            }
        }
        Hg(a, b={}) {
            const c = document.createElement("div");
            var d = this.Fg.size;
            c.style.width = `${d.hh}px`;
            c.style.height = `${d.kh}px`;
            const e = new _.Il(a.rh,a.sh);
            d = this.get("projection");
            const f = new m3a(e,a.Ah,d,this.Fg)
              , g = f.getBounds()
              , h = this.Jg(this.Ig, c);
            let k = !1, m;
            return {
                Ei: () => c,
                bm: () => k,
                loaded: new Promise(p => {
                    m = {
                        bounds: g,
                        li: e,
                        nh: c,
                        PA: h,
                        Gi: {},
                        ql: () => {
                            k = !0;
                            p(void 0)
                        }
                        ,
                        sL: f,
                        zoom: a.Ah
                    };
                    _.dn(this.tiles, m)
                }
                ),
                release: () => {
                    c.textContent = "";
                    h.release();
                    this.tiles.remove(m);
                    b.Ti && b.Ti()
                }
            }
        }
    }
    ;
    var h2a = class {
        constructor(a, b, c, d, e) {
            this.Xs = a;
            this.Yg = b;
            this.Ig = e;
            this.Fg = this.Eg = null;
            this.Gi = {};
            this.Hg = 0;
            this.tileSize = c.size;
            this.Jg = d
        }
        release() {
            f2a(this)
        }
    }
    ;
    var o3a = class {
        constructor(a, b) {
            this.Dh = a;
            this.Xs = b;
            this.Eg = null
        }
    }
    ;
    var p3a = class {
        constructor(a, b, c, d) {
            this.Eg = b;
            this.Fg = d;
            a.nj = e => {
                k2a(this, e)
            }
            ;
            a.onRemove = e => {
                l2a(this, e)
            }
            ;
            c.nj = e => {
                m2a(this, e)
            }
            ;
            c.onRemove = e => {
                n2a(this, e)
            }
            ;
            Object.values(a.Eg).forEach(e => {
                k2a(this, e)
            }
            );
            Object.values(c.Eg).forEach(e => {
                m2a(this, e)
            }
            )
        }
    }
    ;
    var G2a = class {
        constructor(a, b, c) {
            this.poly = a;
            this.Fg = c;
            this.Hg = c.fromDivPixelToLatLng(b);
            this.Eg = [];
            a.get("latLngs").forEach(d => {
                this.Eg.push(d.getArray().slice(0))
            }
            )
        }
        moveTo(a) {
            const b = this.poly.get("latLngs")
              , c = this.Fg;
            a = c.fromDivPixelToLatLng(a);
            a = vQ(c, a);
            const d = vQ(c, this.Hg)
              , e = new _.Im(d.Eg - a.Eg,d.Fg - a.Fg);
            this.Eg.forEach( (f, g) => {
                const h = b.getAt(g);
                f.forEach( (k, m) => {
                    k = vQ(c, k);
                    h.setAt(m, wQ(c, new _.Im(k.Eg - e.Eg,k.Fg - e.Fg)))
                }
                )
            }
            )
        }
    }
    ;
    var x2a = new SQ(1)
      , bR = new SQ(0)
      , cR = new SQ(0);
    var B2a = {
        value: 100,
        unit: "%"
    }
      , C2a = {
        value: 0,
        unit: "px"
    };
    var e3a = class {
        constructor() {
            var a = _.yJa();
            this.Hg = _.RKa;
            this.Eg = _.SKa;
            this.Fg = a
        }
    }
    ;
    var I2a = class {
        constructor(a) {
            this.map = a;
            this.ah = this.Fg = this.Eg = this.Hg = this.geometry = null;
            this.Nh = a.__gm;
            const b = new _.cn;
            (new f3a(this.Nh.Mg,b)).bindTo("projection", a);
            var c = _.Am(-100, -200, 100, 200);
            const d = new _.aL(c);
            c = new _.aL(c);
            this.tiles = new _.cn;
            new p3a(b,d,this.tiles,c);
            const e = _.Ns(a.getDiv());
            let f = void 0
              , g = null;
            this.Ig = new _.Rl(null);
            _.YJ(a, this.Ig, "overlayLayer", 30);
            this.Nh.Fg.then(h => {
                this.ah = h.ah;
                H2a(this, h.ah);
                _.mr(h.pr, k => {
                    if (k && f !== k.Dh) {
                        g && g.unbindAll();
                        f = k.Dh;
                        var m = new o3a(f,e);
                        g = new n3a(this.tiles, (...p) => i2a(m, ...p),f);
                        g.bindTo("projection", a);
                        this.Ig.set(g.Eg())
                    }
                }
                )
            }
            );
            _.Gk(this.Nh.Mg, "insert", h => {
                this.nj(h)
            }
            );
            _.Gk(this.Nh.Mg, "remove", h => {
                this.onRemove(h)
            }
            )
        }
        nj(a) {
            this.Hg && this.Eg && this.Fg && this.geometry && this.ah && (NQ(a, this.Hg),
            L1a(a, this.map, this.Eg, this.geometry.spherical.interpolate, this.ah),
            t1a(a, this.Nh, this.Fg, this.Nh.Kg),
            a.eD || (_.Cl(this.map, a.tp ? "Op" : "Ol"),
            _.M(this.map, a.tp ? 147752 : 147753)))
        }
        onRemove(a) {
            if (this.Eg && this.ah) {
                OQ(a);
                var b = this.Eg;
                delete a.editable_changed;
                K1a(a);
                _.Sk(b, "toolbar", {
                    show: !1,
                    poly: a
                });
                a.OB && (_.Ik(a.OB),
                delete a.OB);
                a.set("capturing", !1);
                delete a.capturing_changed
            }
        }
    }
    ;
    var W2a = class extends _.Vk {
        constructor() {
            super();
            const a = new _.Eq({
                clickable: !1,
                fillOpacity: 0
            });
            a.bindTo("map", this);
            a.bindTo("strokeColor", this);
            a.bindTo("strokeOpacity", this);
            a.bindTo("strokeWeight", this);
            const b = new _.gK(["bounds", "freeControlPoint", "freeVertexPosition"],"return",K2a);
            b.bindTo("bounds", this);
            b.bindTo("freeControlPoint", this);
            b.bindTo("freeVertexPosition", this);
            a.bindTo("bounds", b, "return");
            this.Eg = _.hK();
            this.Eg.bindTo("zIndex", this);
            a.bindTo("zIndex", this.Eg, "ghostZIndex")
        }
    }
    ;
    var P2a = [12, 6, 9, 3]
      , Q2a = [1, 2, 4, 8]
      , L2a = ["ne-resize", "nw-resize", "se-resize", "sw-resize"]
      , N2a = ["row-resize", "col-resize"]
      , M2a = [0]
      , O2a = [2, 1]
      , X2a = class extends _.Vk {
        constructor(a, b, c) {
            super();
            this.Xu = a;
            this.Hg = this.Jg = null;
            this.Fg = !1;
            this.Kg = b;
            this.Eg = new _.ym;
            _.Ok(this.Eg, "set_at", this, this.Mg);
            this.Ig = new _.ym;
            _.Ok(this.Ig, "set_at", this, this.Ng);
            this.Lg = c
        }
        map_changed() {
            this.get("map") || (this.Xu.set("map", null),
            eR(this.Jg),
            this.get("suppressGhostControlPoints") || eR(this.Hg),
            _.Lk(this.Eg))
        }
        bounds_changed() {
            var a = this.Eg;
            const b = this.Ig
              , c = this.get("bounds");
            if (c) {
                this.Fg = !0;
                a.setAt(0, c.getNorthEast());
                a.setAt(1, _.lr(c));
                a.setAt(2, _.kr(c));
                a.setAt(3, c.getSouthWest());
                a = c.ei.center();
                var d = c.Hh.center();
                b.setAt(0, new _.sk(c.ei.lo,d));
                b.setAt(1, new _.sk(a,c.Hh.lo));
                b.setAt(2, new _.sk(c.ei.hi,d));
                b.setAt(3, new _.sk(a,c.Hh.hi));
                this.Fg = !1;
                _.Sk(this, "toolbar", {
                    show: !1
                })
            } else
                a.clear(),
                b.clear()
        }
        Mg(a) {
            S2a(this, P2a[a], this.Eg.getAt(a))
        }
        Ng(a) {
            S2a(this, Q2a[a], this.Ig.getAt(a))
        }
        panes_changed() {
            eR(this.Jg);
            eR(this.Hg);
            this.Hg = null;
            const a = this.get("panes");
            a && (this.Jg = R2a(this, a, !0),
            this.get("suppressGhostControlPoints") || (this.Hg = R2a(this, a, !1)))
        }
        suppressGhostControlPoints_changed() {
            this.panes_changed()
        }
    }
    ;
    var Y2a = class {
        constructor(a, b, c) {
            this.Jg = a;
            this.Fg = c;
            a = a.get("bounds");
            this.Ig = vQ(c, a.getSouthWest());
            this.Hg = vQ(c, a.getNorthEast());
            this.Eg = vQ(c, c.fromDivPixelToLatLng(b))
        }
        moveTo(a) {
            var b = this.Fg;
            a = b.fromDivPixelToLatLng(a);
            b = vQ(b, a);
            a = new _.Im(this.Hg.Eg - this.Eg.Eg + b.Eg,this.Hg.Fg - this.Eg.Fg + b.Fg);
            b = new _.tl(wQ(this.Fg, new _.Im(this.Ig.Eg - this.Eg.Eg + b.Eg,this.Ig.Fg - this.Eg.Fg + b.Fg)),wQ(this.Fg, a));
            this.Jg.set("bounds", b)
        }
    }
    ;
    var q3a = class extends _.Vk {
        constructor(a) {
            super();
            const b = new _.$n;
            this.Eg = b;
            b.ou = a;
            b.eD = !0;
            b.bindTo("capturing", this);
            b.bindTo("cursor", this);
            b.bindTo("map", this);
            b.bindTo("strokeColor", this);
            b.bindTo("strokeOpacity", this);
            b.bindTo("strokeWeight", this);
            b.bindTo("strokePosition", this);
            b.bindTo("fillColor", this);
            b.bindTo("fillOpacity", this);
            b.bindTo("clickable", this);
            b.bindTo("zIndex", this);
            b.bindTo("suppressUndo", this);
            const c = [];
            this.Fg = c;
            KQ.forEach(d => {
                c.push(_.Rk(b, d, this))
            }
            );
            c.push(_.Rk(this, "toolbar", b))
        }
        bounds_changed() {
            const a = this.Eg;
            if (a) {
                var b = this.get("bounds");
                if (b) {
                    const c = b.getSouthWest()
                      , d = b.getNorthEast();
                    b = b.getCenter();
                    a.setPaths([new _.sk(d.lat(),d.lng()), new _.sk(d.lat(),b.lng()), new _.sk(d.lat(),c.lng()), new _.sk(c.lat(),c.lng()), new _.sk(c.lat(),b.lng()), new _.sk(c.lat(),d.lng())])
                } else
                    a.setPaths([])
            }
        }
        release() {
            const a = this.Fg;
            for (let b = 0, c = a.length; b < c; ++b)
                _.Ik(a[b]);
            delete this.Fg;
            this.Eg.unbindAll();
            delete this.Eg
        }
    }
    ;
    var $2a = class {
        constructor(a) {
            this.Eg = a;
            this.ah = this.Fg = null;
            this.Nh = this.Eg.__gm;
            this.Nh.Fg.then( ({ah: b}) => {
                this.ah = b;
                Z2a(this, b)
            }
            );
            this.Nh.Og.nj = b => {
                this.nj(b)
            }
            ;
            this.Nh.Og.onRemove = b => {
                this.onRemove(b)
            }
        }
        nj(a) {
            if (this.Fg && this.ah) {
                var b = a.FE = new q3a(a);
                b.set("map", this.Eg);
                b.bindTo("bounds", a);
                b.bindTo("capturing", a);
                b.bindTo("cursor", a);
                b.bindTo("clickable", a);
                b.bindTo("fillColor", a);
                b.bindTo("fillOpacity", a);
                b.bindTo("strokeColor", a);
                b.bindTo("strokeOpacity", a);
                b.bindTo("strokeWeight", a);
                b.bindTo("strokePosition", a);
                b.bindTo("suppressUndo", a);
                b.bindTo("zIndex", a);
                var c = [];
                a.ph = c;
                KQ.forEach(d => {
                    c.push(_.Rk(b, d, a))
                }
                );
                c.push(_.Rk(a, "toolbar", b));
                NQ(a, this.Fg);
                V2a(a, this.Eg, this.ah);
                _.Cl(this.Eg, "Or");
                _.M(this.Eg, 147755)
            }
        }
        onRemove(a) {
            if (this.ah) {
                var b = a.FE;
                b.unbindAll();
                b.set("map", null);
                b.release();
                delete a.FE;
                a.ph && a.ph.forEach(_.Ik);
                delete a.ph;
                OQ(a);
                delete a.editable_changed;
                U2a(a)
            }
        }
    }
    ;
    var r3a = class {
        constructor() {
            this.xG = q1a;
            this.BG = J2a;
            this.CG = a3a
        }
    }
    ;
    _.xj("poly", new r3a);
});
